#!/usr/bin/python
# Copyright 2011 Google Inc. All Rights Reserved.
#
# AUTO-GENERATED BY parse-schema.py
#
# DO NOT EDIT!!
#
#pylint: disable-msg=C6202
#pylint: disable-msg=C6409
#pylint: disable-msg=C6310
# These should not actually be necessary (bugs in gpylint?):
#pylint: disable-msg=E1101
#pylint: disable-msg=W0231
#
"""Auto-generated from spec: urn:broadband-forum-org:tr-135-1-0."""

import core


class STBService_v1_0(core.Exporter):
  """Represents STBService_v1_0."""

  def __init__(self, **defaults):
    core.Exporter.__init__(self, defaults=defaults)
    self.Export(params=['STBServiceNumberOfEntries'],
                lists=['STBService'])

  class STBService(core.Exporter):
    """Represents STBService_v1_0.STBService.{i}."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(params=['Enable'],
                  objects=['AVPlayers',
                           'AVStreams',
                           'Applications',
                           'Capabilities',
                           'Components',
                           'ServiceMonitoring'])

    class AVPlayers(core.Exporter):
      """Represents STBService_v1_0.STBService.{i}.AVPlayers."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['AVPlayerNumberOfEntries',
                            'ActiveAVPlayers',
                            'PreferredAudioLanguage',
                            'PreferredSubtitlingLanguage'],
                    lists=['AVPlayer'])

      class AVPlayer(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.AVPlayers.AVPlayer.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['AudioLanguage',
                              'AudioOutputs',
                              'Enable',
                              'MainStream',
                              'Name',
                              'PIPStreams',
                              'Status',
                              'SubtitlingLanguage',
                              'SubtitlingStatus',
                              'VideoOutputs'])

    class AVStreams(core.Exporter):
      """Represents STBService_v1_0.STBService.{i}.AVStreams."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['AVStreamNumberOfEntries',
                            'ActiveAVStreams'],
                    lists=['AVStream'])

      class AVStream(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.AVStreams.AVStream.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['AudioDecoder',
                              'CA',
                              'DRM',
                              'FrontEnd',
                              'Inbound',
                              'Name',
                              'Outbound',
                              'PVRState',
                              'Status',
                              'VideoDecoder'])

    class Applications(core.Exporter):
      """Represents STBService_v1_0.STBService.{i}.Applications."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(objects=['AudienceStats'])

      class AudienceStats(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.Applications.AudienceStats."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['ChannelNumberOfEntries',
                              'Enable',
                              'Reset',
                              'ResetTime'],
                      lists=['Channel'])

        class Channel(core.Exporter):
          """Represents STBService_v1_0.STBService.{i}.Applications.AudienceStats.Channel.{i}."""

          def __init__(self, **defaults):
            core.Exporter.__init__(self, defaults=defaults)
            self.Export(params=['Duration',
                                'Name'])

    class Capabilities(core.Exporter):
      """Represents STBService_v1_0.STBService.{i}.Capabilities."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['MaxActiveAVPlayers',
                            'MaxActiveAVStreams'],
                    objects=['AudienceStats',
                             'AudioDecoder',
                             'AudioOutput',
                             'CA',
                             'DRM',
                             'FrontEnd',
                             'PVR',
                             'ServiceMonitoring',
                             'VideoDecoder',
                             'VideoOutput'])

      class AudienceStats(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.Capabilities.AudienceStats."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['MaxAudienceStatsChannels'])

      class AudioDecoder(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.Capabilities.AudioDecoder."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['AudioStandards'])

      class AudioOutput(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.Capabilities.AudioOutput."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['AudioFormats'])

      class CA(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.Capabilities.CA."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['CASystems'])

      class DRM(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.Capabilities.DRM."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['DRMSystems'])

      class FrontEnd(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.Capabilities.FrontEnd."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(objects=['DVBT',
                               'IP'])

        class DVBT(core.Exporter):
          """Represents STBService_v1_0.STBService.{i}.Capabilities.FrontEnd.DVBT."""

          def __init__(self, **defaults):
            core.Exporter.__init__(self, defaults=defaults)
            self.Export(params=['MaxActiveDVBTStreams',
                                'MaxLogicalChannels'])

        class IP(core.Exporter):
          """Represents STBService_v1_0.STBService.{i}.Capabilities.FrontEnd.IP."""

          def __init__(self, **defaults):
            core.Exporter.__init__(self, defaults=defaults)
            self.Export(params=['DownloadTransportProtocols',
                                'MaxActiveIPStreams',
                                'MaxActiveInboundIPStreams',
                                'MaxActiveOutboundIPStreams',
                                'MaxDejitteringBufferSize',
                                'MultiplexTypes',
                                'StreamingControlProtocols',
                                'StreamingTransportControlProtocols',
                                'StreamingTransportProtocols'])

      class PVR(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.Capabilities.PVR."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['MaxIOStreams',
                              'MaxPlaybackStreams',
                              'MaxRecordingStreams',
                              'MaxTimeDelay'])

      class ServiceMonitoring(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.Capabilities.ServiceMonitoring."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['HighLevelMetricNames',
                              'MaxActiveMainStreams',
                              'MaxReportSamples',
                              'MinSampleInterval',
                              'ServiceTypes'])

      class VideoDecoder(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.Capabilities.VideoDecoder."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['VideoStandards'],
                      objects=['MPEG2Part2',
                               'MPEG4Part10',
                               'MPEG4Part2',
                               'SMPTEVC1'])

        class MPEG2Part2(core.Exporter):
          """Represents STBService_v1_0.STBService.{i}.Capabilities.VideoDecoder.MPEG2Part2."""

          def __init__(self, **defaults):
            core.Exporter.__init__(self, defaults=defaults)
            self.Export(params=['AudioStandards',
                                'ProfileLevelNumberOfEntries'],
                        lists=['ProfileLevel'])

          class ProfileLevel(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.Capabilities.VideoDecoder.MPEG2Part2.ProfileLevel.{i}."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['Level',
                                  'MaximumDecodingCapability',
                                  'Profile'])

        class MPEG4Part10(core.Exporter):
          """Represents STBService_v1_0.STBService.{i}.Capabilities.VideoDecoder.MPEG4Part10."""

          def __init__(self, **defaults):
            core.Exporter.__init__(self, defaults=defaults)
            self.Export(params=['AudioStandards',
                                'ProfileLevelNumberOfEntries'],
                        lists=['ProfileLevel'])

          class ProfileLevel(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.Capabilities.VideoDecoder.MPEG4Part10.ProfileLevel.{i}."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['Level',
                                  'MaximumDecodingCapability',
                                  'Profile'])

        class MPEG4Part2(core.Exporter):
          """Represents STBService_v1_0.STBService.{i}.Capabilities.VideoDecoder.MPEG4Part2."""

          def __init__(self, **defaults):
            core.Exporter.__init__(self, defaults=defaults)
            self.Export(params=['AudioStandards',
                                'ProfileLevelNumberOfEntries'],
                        lists=['ProfileLevel'])

          class ProfileLevel(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.Capabilities.VideoDecoder.MPEG4Part2.ProfileLevel.{i}."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['Level',
                                  'MaximumDecodingCapability',
                                  'Profile'])

        class SMPTEVC1(core.Exporter):
          """Represents STBService_v1_0.STBService.{i}.Capabilities.VideoDecoder.SMPTEVC1."""

          def __init__(self, **defaults):
            core.Exporter.__init__(self, defaults=defaults)
            self.Export(params=['AudioStandards',
                                'ProfileLevelNumberOfEntries'],
                        lists=['ProfileLevel'])

          class ProfileLevel(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.Capabilities.VideoDecoder.SMPTEVC1.ProfileLevel.{i}."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['Level',
                                  'MaximumDecodingCapability',
                                  'Profile'])

      class VideoOutput(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.Capabilities.VideoOutput."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['CompositeVideoStandards',
                              'HDCP',
                              'Macrovision',
                              'VideoFormats'])

    class Components(core.Exporter):
      """Represents STBService_v1_0.STBService.{i}.Components."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['AudioDecoderNumberOfEntries',
                            'AudioOutputNumberOfEntries',
                            'CANumberOfEntries',
                            'DRMNumberOfEntries',
                            'FrontEndNumberOfEntries',
                            'SCARTNumberOfEntries',
                            'VideoDecoderNumberOfEntries',
                            'VideoOutputNumberOfEntries'],
                    objects=['PVR'],
                    lists=['AudioDecoder',
                           'AudioOutput',
                           'CA',
                           'DRM',
                           'FrontEnd',
                           'SCART',
                           'VideoDecoder',
                           'VideoOutput'])

      class AudioDecoder(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.Components.AudioDecoder.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['AudioStandard',
                              'Enable',
                              'Name',
                              'Status'])

      class AudioOutput(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.Components.AudioOutput.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['AudioFormat',
                              'AudioLevel',
                              'CancelMute',
                              'Enable',
                              'Name',
                              'SCARTs',
                              'Status'])

      class CA(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.Components.CA.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['Enable',
                              'Name',
                              'SmartCardReader',
                              'Status'])

      class DRM(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.Components.DRM.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['Enable',
                              'Name',
                              'SmartCardReader',
                              'Status'])

      class FrontEnd(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.Components.FrontEnd.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['Enable',
                              'Name',
                              'Status'],
                      objects=['DVBT',
                               'IP'])

        class DVBT(core.Exporter):
          """Represents STBService_v1_0.STBService.{i}.Components.FrontEnd.{i}.DVBT."""

          def __init__(self, **defaults):
            core.Exporter.__init__(self, defaults=defaults)
            self.Export(objects=['Install',
                                 'LogicalChannelConnect',
                                 'Modulation',
                                 'ServiceConnect',
                                 'ServiceListDatabase'])

          class Install(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.Components.FrontEnd.{i}.DVBT.Install."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['Progress',
                                  'Start',
                                  'StartFrequency',
                                  'Status',
                                  'StopFrequency'])

          class LogicalChannelConnect(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.Components.FrontEnd.{i}.DVBT.LogicalChannelConnect."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['LogicalChannelNumber'])

          class Modulation(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.Components.FrontEnd.{i}.DVBT.Modulation."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['BER',
                                  'CBER',
                                  'ChannelBandwidth',
                                  'CodeRateHP',
                                  'CodeRateLP',
                                  'Constellation',
                                  'Frequency',
                                  'GuardInterval',
                                  'HierarchicalInformation',
                                  'Locked',
                                  'SNR',
                                  'TransmissionMode'])

          class ServiceConnect(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.Components.FrontEnd.{i}.DVBT.ServiceConnect."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['DvbId'])

          class ServiceListDatabase(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.Components.FrontEnd.{i}.DVBT.ServiceListDatabase."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['LogicalChannelNumberOfEntries',
                                  'Reset',
                                  'TotalServices'],
                          lists=['LogicalChannel'])

            class LogicalChannel(core.Exporter):
              """Represents STBService_v1_0.STBService.{i}.Components.FrontEnd.{i}.DVBT.ServiceListDatabase.LogicalChannel.{i}."""

              def __init__(self, **defaults):
                core.Exporter.__init__(self, defaults=defaults)
                self.Export(params=['LogicalChannelNumber',
                                    'ServiceNumberOfEntries'],
                            lists=['Service'])

              class Service(core.Exporter):
                """Represents STBService_v1_0.STBService.{i}.Components.FrontEnd.{i}.DVBT.ServiceListDatabase.LogicalChannel.{i}.Service.{i}."""

                def __init__(self, **defaults):
                  core.Exporter.__init__(self, defaults=defaults)
                  self.Export(params=['BER',
                                      'DvbId',
                                      'Frequency',
                                      'Preferred'])

        class IP(core.Exporter):
          """Represents STBService_v1_0.STBService.{i}.Components.FrontEnd.{i}.IP."""

          def __init__(self, **defaults):
            core.Exporter.__init__(self, defaults=defaults)
            self.Export(params=['ActiveInboundIPStreams',
                                'ActiveOutboundIPStreams',
                                'InboundNumberOfEntries',
                                'OutboundNumberOfEntries'],
                        objects=['Dejittering',
                                 'IGMP',
                                 'RTCP',
                                 'RTPAVPF',
                                 'ServiceConnect'],
                        lists=['Inbound',
                               'Outbound'])

          class Dejittering(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.Components.FrontEnd.{i}.IP.Dejittering."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['BufferInitialLevel',
                                  'BufferSize'])

          class IGMP(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.Components.FrontEnd.{i}.IP.IGMP."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['ClientGroupNumberOfEntries',
                                  'ClientGroupStatsNumberOfEntries',
                                  'ClientRobustness',
                                  'ClientUnsolicitedReportInterval',
                                  'ClientVersion',
                                  'DSCPMark',
                                  'Enable',
                                  'EthernetPriorityMark',
                                  'LoggingEnable',
                                  'MaximumNumberOfConcurrentGroups',
                                  'MaximumNumberOfTrackedGroups',
                                  'Status',
                                  'VLANIDMark'],
                          lists=['ClientGroup',
                                 'ClientGroupStats'])

            class ClientGroup(core.Exporter):
              """Represents STBService_v1_0.STBService.{i}.Components.FrontEnd.{i}.IP.IGMP.ClientGroup.{i}."""

              def __init__(self, **defaults):
                core.Exporter.__init__(self, defaults=defaults)
                self.Export(params=['GroupAddress',
                                    'UpTime'])

            class ClientGroupStats(core.Exporter):
              """Represents STBService_v1_0.STBService.{i}.Components.FrontEnd.{i}.IP.IGMP.ClientGroupStats.{i}."""

              def __init__(self, **defaults):
                core.Exporter.__init__(self, defaults=defaults)
                self.Export(params=['CurrentDayStart',
                                    'GroupAddress',
                                    'QuarterHourStart',
                                    'TotalStart'],
                            objects=['CurrentDay',
                                     'QuarterHour',
                                     'Total'])

              class CurrentDay(core.Exporter):
                """Represents STBService_v1_0.STBService.{i}.Components.FrontEnd.{i}.IP.IGMP.ClientGroupStats.{i}.CurrentDay."""

                def __init__(self, **defaults):
                  core.Exporter.__init__(self, defaults=defaults)
                  self.Export(params=['MaxJoinDelay',
                                      'NumberOfJoins',
                                      'NumberOfLeaves'])

              class QuarterHour(core.Exporter):
                """Represents STBService_v1_0.STBService.{i}.Components.FrontEnd.{i}.IP.IGMP.ClientGroupStats.{i}.QuarterHour."""

                def __init__(self, **defaults):
                  core.Exporter.__init__(self, defaults=defaults)
                  self.Export(params=['MaxJoinDelay',
                                      'NumberOfJoins',
                                      'NumberOfLeaves'])

              class Total(core.Exporter):
                """Represents STBService_v1_0.STBService.{i}.Components.FrontEnd.{i}.IP.IGMP.ClientGroupStats.{i}.Total."""

                def __init__(self, **defaults):
                  core.Exporter.__init__(self, defaults=defaults)
                  self.Export(params=['MaxJoinDelay',
                                      'NumberOfJoins',
                                      'NumberOfLeaves'])

          class Inbound(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.Components.FrontEnd.{i}.IP.Inbound.{i}."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['DestinationAddress',
                                  'DestinationPort',
                                  'DownloadTransportProtocol',
                                  'MultiplexType',
                                  'SourceAddress',
                                  'SourcePort',
                                  'Status',
                                  'StreamingControlProtocol',
                                  'StreamingTransportControlProtocol',
                                  'StreamingTransportProtocol',
                                  'URI'])

          class Outbound(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.Components.FrontEnd.{i}.IP.Outbound.{i}."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['MultiplexType',
                                  'Status',
                                  'URI'])

          class RTCP(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.Components.FrontEnd.{i}.IP.RTCP."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['Enable',
                                  'Status',
                                  'TxRepeatInterval'])

          class RTPAVPF(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.Components.FrontEnd.{i}.IP.RTPAVPF."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['Enable',
                                  'MaxLossBurst',
                                  'MaxReportTime',
                                  'MinLossPackets',
                                  'RetransmitTimeout',
                                  'Status'])

          class ServiceConnect(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.Components.FrontEnd.{i}.IP.ServiceConnect."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['URI'])

      class PVR(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.Components.PVR."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['StorageNumberOfEntries'],
                      lists=['Storage'])

        class Storage(core.Exporter):
          """Represents STBService_v1_0.STBService.{i}.Components.PVR.Storage.{i}."""

          def __init__(self, **defaults):
            core.Exporter.__init__(self, defaults=defaults)
            self.Export(params=['Reference'])

      class SCART(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.Components.SCART.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['Enable',
                              'Name',
                              'Presence',
                              'Status'])

      class VideoDecoder(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.Components.VideoDecoder.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['ContentAspectRatio',
                              'Enable',
                              'MPEG2Part2',
                              'MPEG4Part10',
                              'MPEG4Part2',
                              'Name',
                              'SMPTEVC1',
                              'Status'])

      class VideoOutput(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.Components.VideoOutput.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['AspectRatioBehaviour',
                              'CompositeVideoStandard',
                              'Enable',
                              'HDCP',
                              'Macrovision',
                              'Name',
                              'SCARTs',
                              'Status',
                              'VideoFormat'])

    class ServiceMonitoring(core.Exporter):
      """Represents STBService_v1_0.STBService.{i}.ServiceMonitoring."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['FetchSamples',
                            'ForceSample',
                            'MainStreamNumberOfEntries',
                            'ReportEndTime',
                            'ReportSamples',
                            'ReportStartTime',
                            'SampleEnable',
                            'SampleInterval',
                            'SampleState',
                            'TimeReference'],
                    lists=['MainStream'])

      class MainStream(core.Exporter):
        """Represents STBService_v1_0.STBService.{i}.ServiceMonitoring.MainStream.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['AVStream',
                              'Enable',
                              'Gmin',
                              'ServiceType',
                              'SevereLossMinDistance',
                              'SevereLossMinLength',
                              'Status'],
                      objects=['Sample',
                               'Total'])

        class Sample(core.Exporter):
          """Represents STBService_v1_0.STBService.{i}.ServiceMonitoring.MainStream.{i}.Sample."""

          def __init__(self, **defaults):
            core.Exporter.__init__(self, defaults=defaults)
            self.Export(params=['HighLevelMetricStatsNumberOfEntries',
                                'PVRTimeShift',
                                'SampleSeconds',
                                'SignificantChanges'],
                        objects=['AudioDecoderStats',
                                 'DejitteringStats',
                                 'MPEG2TSStats',
                                 'RTPStats',
                                 'VideoDecoderStats',
                                 'VideoResponseStats'],
                        lists=['HighLevelMetricStats'])

          class AudioDecoderStats(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.ServiceMonitoring.MainStream.{i}.Sample.AudioDecoderStats."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['DecodedFrames',
                                  'DecodingErrors',
                                  'SampleSeconds'])

          class DejitteringStats(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.ServiceMonitoring.MainStream.{i}.Sample.DejitteringStats."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['EmptyBufferTime',
                                  'Overruns',
                                  'SampleSeconds',
                                  'Underruns'])

          class HighLevelMetricStats(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.ServiceMonitoring.MainStream.{i}.Sample.HighLevelMetricStats.{i}."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['Metric1',
                                  'Metric1Failures',
                                  'Metric1Threshold',
                                  'Metric2',
                                  'Metric2Failures',
                                  'Metric2Threshold',
                                  'MetricName',
                                  'SampleSeconds'])

          class MPEG2TSStats(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.ServiceMonitoring.MainStream.{i}.Sample.MPEG2TSStats."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['PacketDiscontinuityCounter',
                                  'PacketDiscontinuityCounterBeforeCA',
                                  'SampleSeconds',
                                  'TSPacketsDrained',
                                  'TSPacketsReceived',
                                  'TSSyncByteErrorCount',
                                  'TSSyncLossCount'])

          class RTPStats(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.ServiceMonitoring.MainStream.{i}.Sample.RTPStats."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['AverageLossDistance',
                                  'AverageLossDistanceBeforeEC',
                                  'AverageLossPeriod',
                                  'AverageLossPeriodBeforeEC',
                                  'LossEvents',
                                  'LossEventsBeforeEC',
                                  'MaximumLossPeriod',
                                  'MaximumLossPeriodBeforeEC',
                                  'MinimumLossDistance',
                                  'MinimumLossDistanceBeforeEC',
                                  'MinimumLossPeriod',
                                  'MinimumLossPeriodBeforeEC',
                                  'PacketsDiscarded',
                                  'PacketsExpected',
                                  'PacketsLost',
                                  'PacketsLostBeforeEC',
                                  'PacketsOutOfSequence',
                                  'PacketsReceived',
                                  'PacketsReceivedBeforeEC',
                                  'RetransmitTimeouts',
                                  'SampleSeconds',
                                  'SevereLossIndexCount',
                                  'SevereLossIndexCountBeforeEC',
                                  'SevereLossLengthCount',
                                  'SevereLossLengthCountBeforeEC'])

          class VideoDecoderStats(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.ServiceMonitoring.MainStream.{i}.Sample.VideoDecoderStats."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['AVResynchCounter',
                                  'BConcealedFrames',
                                  'BDecodedFrames',
                                  'BLostFrames',
                                  'ConcealedFrames',
                                  'DecodedFrames',
                                  'FrameRate',
                                  'IConcealedFrames',
                                  'IDecodedFrames',
                                  'ILostFrames',
                                  'LostFrames',
                                  'PConcealedFrames',
                                  'PDecodedFrames',
                                  'PLostFrames',
                                  'SampleSeconds'])

          class VideoResponseStats(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.ServiceMonitoring.MainStream.{i}.Sample.VideoResponseStats."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['AverageVideoSystemResponse',
                                  'MaximumVideoSystemResponse',
                                  'MinimumVideoSystemResponse',
                                  'SampleSeconds'])

        class Total(core.Exporter):
          """Represents STBService_v1_0.STBService.{i}.ServiceMonitoring.MainStream.{i}.Total."""

          def __init__(self, **defaults):
            core.Exporter.__init__(self, defaults=defaults)
            self.Export(params=['Reset',
                                'ResetTime'],
                        objects=['AudioDecoderStats',
                                 'DejitteringStats',
                                 'MPEG2TSStats',
                                 'RTPStats',
                                 'VideoDecoderStats',
                                 'VideoResponseStats'])

          class AudioDecoderStats(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.ServiceMonitoring.MainStream.{i}.Total.AudioDecoderStats."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['DecodedFrames',
                                  'DecodingErrors'])

          class DejitteringStats(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.ServiceMonitoring.MainStream.{i}.Total.DejitteringStats."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['Overruns',
                                  'Underruns'])

          class MPEG2TSStats(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.ServiceMonitoring.MainStream.{i}.Total.MPEG2TSStats."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['PacketDiscontinuityCounter',
                                  'PacketDiscontinuityCounterBeforeCA',
                                  'TSPacketsReceived',
                                  'TSSyncByteErrorCount',
                                  'TSSyncLossCount'])

          class RTPStats(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.ServiceMonitoring.MainStream.{i}.Total.RTPStats."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['LossEvents',
                                  'LossEventsBeforeEC',
                                  'PacketsDiscarded',
                                  'PacketsExpected',
                                  'PacketsLost',
                                  'PacketsLostBeforeEC',
                                  'PacketsOutOfSequence',
                                  'PacketsReceived',
                                  'PacketsReceivedBeforeEC',
                                  'RetransmitTimeouts',
                                  'SevereLossIndexCount',
                                  'SevereLossIndexCountBeforeEC',
                                  'SevereLossLengthCount',
                                  'SevereLossLengthCountBeforeEC'])

          class VideoDecoderStats(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.ServiceMonitoring.MainStream.{i}.Total.VideoDecoderStats."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['AVResynchCounter',
                                  'BConcealedFrames',
                                  'BDecodedFrames',
                                  'BLostFrames',
                                  'ConcealedFrames',
                                  'DecodedFrames',
                                  'FrameRate',
                                  'IConcealedFrames',
                                  'IDecodedFrames',
                                  'ILostFrames',
                                  'LostFrames',
                                  'PConcealedFrames',
                                  'PDecodedFrames',
                                  'PLostFrames'])

          class VideoResponseStats(core.Exporter):
            """Represents STBService_v1_0.STBService.{i}.ServiceMonitoring.MainStream.{i}.Total.VideoResponseStats."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['MaximumVideoSystemResponse',
                                  'MinimumVideoSystemResponse'])


if __name__ == '__main__':
  print core.DumpSchema(STBService_v1_0)
