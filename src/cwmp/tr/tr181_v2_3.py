#!/usr/bin/python
# Copyright 2011 Google Inc. All Rights Reserved.
#
# AUTO-GENERATED BY parse-schema.py
#
# DO NOT EDIT!!
#
#pylint: disable-msg=C6202
#pylint: disable-msg=C6409
#pylint: disable-msg=C6310
# These should not actually be necessary (bugs in gpylint?):
#pylint: disable-msg=E1101
#pylint: disable-msg=W0231
#
"""Auto-generated from spec: urn:broadband-forum-org:tr-181-2-3."""

import core
from tr181_v2_2 import Device_v2_2


class Device_v2_3(Device_v2_2):
  """Represents Device_v2_3."""

  def __init__(self, **defaults):
    Device_v2_2.__init__(self, defaults=defaults)
    self.Export(objects=['Device',
                         'DeviceInfo',
                         'DownloadAvailability',
                         'ManagementServer',
                         'NSLookupDiagnostics',
                         'PeriodicStatistics',
                         'SoftwareModules',
                         'USBHosts'],
                lists=['SmartCardReader',
                       'User'])

  class Device(Device_v2_2.Device):
    """Represents Device_v2_3.Device."""

    def __init__(self, **defaults):
      Device_v2_2.Device.__init__(self, defaults=defaults)
      self.Export(objects=['ATM',
                           'Bridging',
                           'DHCPv4',
                           'DHCPv6',
                           'DNS',
                           'DSL',
                           'DSLite',
                           'Ethernet',
                           'Firewall',
                           'HPNA',
                           'HomePlug',
                           'Hosts',
                           'IEEE8021x',
                           'IP',
                           'IPv6rd',
                           'ManagementServer',
                           'MoCA',
                           'NAT',
                           'NeighborDiscovery',
                           'PPP',
                           'PTM',
                           'QoS',
                           'RouterAdvertisement',
                           'Routing',
                           'UPA',
                           'USB',
                           'WiFi'],
                  lists=['InterfaceStack'])

    class ATM(Device_v2_2.Device.ATM):
      """Represents Device_v2_3.Device.ATM."""

      def __init__(self, **defaults):
        Device_v2_2.Device.ATM.__init__(self, defaults=defaults)
        self.Export(lists=['Link'])

      class Link(Device_v2_2.Device.ATM.Link):
        """Represents Device_v2_3.Device.ATM.Link.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.ATM.Link.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

    class Bridging(Device_v2_2.Device.Bridging):
      """Represents Device_v2_3.Device.Bridging."""

      def __init__(self, **defaults):
        Device_v2_2.Device.Bridging.__init__(self, defaults=defaults)
        self.Export(lists=['Bridge',
                           'Filter'])

      class Bridge(Device_v2_2.Device.Bridging.Bridge):
        """Represents Device_v2_3.Device.Bridging.Bridge.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.Bridging.Bridge.__init__(self, defaults=defaults)
          self.Export(params=['Alias'],
                      lists=['Port',
                             'VLAN',
                             'VLANPort'])

        class Port(Device_v2_2.Device.Bridging.Bridge.Port):
          """Represents Device_v2_3.Device.Bridging.Bridge.{i}.Port.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.Bridging.Bridge.Port.__init__(self, defaults=defaults)
            self.Export(params=['Alias'])

        class VLAN(Device_v2_2.Device.Bridging.Bridge.VLAN):
          """Represents Device_v2_3.Device.Bridging.Bridge.{i}.VLAN.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.Bridging.Bridge.VLAN.__init__(self, defaults=defaults)
            self.Export(params=['Alias'])

        class VLANPort(Device_v2_2.Device.Bridging.Bridge.VLANPort):
          """Represents Device_v2_3.Device.Bridging.Bridge.{i}.VLANPort.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.Bridging.Bridge.VLANPort.__init__(self, defaults=defaults)
            self.Export(params=['Alias'])

      class Filter(Device_v2_2.Device.Bridging.Filter):
        """Represents Device_v2_3.Device.Bridging.Filter.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.Bridging.Filter.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

    class DHCPv4(Device_v2_2.Device.DHCPv4):
      """Represents Device_v2_3.Device.DHCPv4."""

      def __init__(self, **defaults):
        Device_v2_2.Device.DHCPv4.__init__(self, defaults=defaults)
        self.Export(objects=['Relay',
                             'Server'],
                    lists=['Client'])

      class Client(Device_v2_2.Device.DHCPv4.Client):
        """Represents Device_v2_3.Device.DHCPv4.Client.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.DHCPv4.Client.__init__(self, defaults=defaults)
          self.Export(params=['Alias'],
                      lists=['ReqOption',
                             'SentOption'])

        class ReqOption(Device_v2_2.Device.DHCPv4.Client.ReqOption):
          """Represents Device_v2_3.Device.DHCPv4.Client.{i}.ReqOption.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.DHCPv4.Client.ReqOption.__init__(self, defaults=defaults)
            self.Export(params=['Alias'])

        class SentOption(Device_v2_2.Device.DHCPv4.Client.SentOption):
          """Represents Device_v2_3.Device.DHCPv4.Client.{i}.SentOption.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.DHCPv4.Client.SentOption.__init__(self, defaults=defaults)
            self.Export(params=['Alias'])

      class Relay(Device_v2_2.Device.DHCPv4.Relay):
        """Represents Device_v2_3.Device.DHCPv4.Relay."""

        def __init__(self, **defaults):
          Device_v2_2.Device.DHCPv4.Relay.__init__(self, defaults=defaults)
          self.Export(lists=['Forwarding'])

        class Forwarding(Device_v2_2.Device.DHCPv4.Relay.Forwarding):
          """Represents Device_v2_3.Device.DHCPv4.Relay.Forwarding.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.DHCPv4.Relay.Forwarding.__init__(self, defaults=defaults)
            self.Export(params=['Alias'])

      class Server(Device_v2_2.Device.DHCPv4.Server):
        """Represents Device_v2_3.Device.DHCPv4.Server."""

        def __init__(self, **defaults):
          Device_v2_2.Device.DHCPv4.Server.__init__(self, defaults=defaults)
          self.Export(lists=['Pool'])

        class Pool(Device_v2_2.Device.DHCPv4.Server.Pool):
          """Represents Device_v2_3.Device.DHCPv4.Server.Pool.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.DHCPv4.Server.Pool.__init__(self, defaults=defaults)
            self.Export(params=['Alias'],
                        lists=['Client',
                               'Option',
                               'StaticAddress'])

          class Client(Device_v2_2.Device.DHCPv4.Server.Pool.Client):
            """Represents Device_v2_3.Device.DHCPv4.Server.Pool.{i}.Client.{i}."""

            def __init__(self, **defaults):
              Device_v2_2.Device.DHCPv4.Server.Pool.Client.__init__(self, defaults=defaults)
              self.Export(params=['Alias'])

          class Option(Device_v2_2.Device.DHCPv4.Server.Pool.Option):
            """Represents Device_v2_3.Device.DHCPv4.Server.Pool.{i}.Option.{i}."""

            def __init__(self, **defaults):
              Device_v2_2.Device.DHCPv4.Server.Pool.Option.__init__(self, defaults=defaults)
              self.Export(params=['Alias'])

          class StaticAddress(Device_v2_2.Device.DHCPv4.Server.Pool.StaticAddress):
            """Represents Device_v2_3.Device.DHCPv4.Server.Pool.{i}.StaticAddress.{i}."""

            def __init__(self, **defaults):
              Device_v2_2.Device.DHCPv4.Server.Pool.StaticAddress.__init__(self, defaults=defaults)
              self.Export(params=['Alias'])

    class DHCPv6(Device_v2_2.Device.DHCPv6):
      """Represents Device_v2_3.Device.DHCPv6."""

      def __init__(self, **defaults):
        Device_v2_2.Device.DHCPv6.__init__(self, defaults=defaults)
        self.Export(objects=['Server'],
                    lists=['Client'])

      class Client(Device_v2_2.Device.DHCPv6.Client):
        """Represents Device_v2_3.Device.DHCPv6.Client.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.DHCPv6.Client.__init__(self, defaults=defaults)
          self.Export(params=['Alias'],
                      lists=['SentOption'])

        class SentOption(Device_v2_2.Device.DHCPv6.Client.SentOption):
          """Represents Device_v2_3.Device.DHCPv6.Client.{i}.SentOption.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.DHCPv6.Client.SentOption.__init__(self, defaults=defaults)
            self.Export(params=['Alias'])

      class Server(Device_v2_2.Device.DHCPv6.Server):
        """Represents Device_v2_3.Device.DHCPv6.Server."""

        def __init__(self, **defaults):
          Device_v2_2.Device.DHCPv6.Server.__init__(self, defaults=defaults)
          self.Export(lists=['Pool'])

        class Pool(Device_v2_2.Device.DHCPv6.Server.Pool):
          """Represents Device_v2_3.Device.DHCPv6.Server.Pool.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.DHCPv6.Server.Pool.__init__(self, defaults=defaults)
            self.Export(params=['Alias'],
                        lists=['Client',
                               'Option'])

          class Client(Device_v2_2.Device.DHCPv6.Server.Pool.Client):
            """Represents Device_v2_3.Device.DHCPv6.Server.Pool.{i}.Client.{i}."""

            def __init__(self, **defaults):
              Device_v2_2.Device.DHCPv6.Server.Pool.Client.__init__(self, defaults=defaults)
              self.Export(params=['Alias'])

          class Option(Device_v2_2.Device.DHCPv6.Server.Pool.Option):
            """Represents Device_v2_3.Device.DHCPv6.Server.Pool.{i}.Option.{i}."""

            def __init__(self, **defaults):
              Device_v2_2.Device.DHCPv6.Server.Pool.Option.__init__(self, defaults=defaults)
              self.Export(params=['Alias'])

    class DNS(Device_v2_2.Device.DNS):
      """Represents Device_v2_3.Device.DNS."""

      def __init__(self, **defaults):
        Device_v2_2.Device.DNS.__init__(self, defaults=defaults)
        self.Export(objects=['Client',
                             'Relay'])

      class Client(Device_v2_2.Device.DNS.Client):
        """Represents Device_v2_3.Device.DNS.Client."""

        def __init__(self, **defaults):
          Device_v2_2.Device.DNS.Client.__init__(self, defaults=defaults)
          self.Export(lists=['Server'])

        class Server(Device_v2_2.Device.DNS.Client.Server):
          """Represents Device_v2_3.Device.DNS.Client.Server.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.DNS.Client.Server.__init__(self, defaults=defaults)
            self.Export(params=['Alias'])

      class Relay(Device_v2_2.Device.DNS.Relay):
        """Represents Device_v2_3.Device.DNS.Relay."""

        def __init__(self, **defaults):
          Device_v2_2.Device.DNS.Relay.__init__(self, defaults=defaults)
          self.Export(lists=['Forwarding'])

        class Forwarding(Device_v2_2.Device.DNS.Relay.Forwarding):
          """Represents Device_v2_3.Device.DNS.Relay.Forwarding.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.DNS.Relay.Forwarding.__init__(self, defaults=defaults)
            self.Export(params=['Alias'])

    class DSL(Device_v2_2.Device.DSL):
      """Represents Device_v2_3.Device.DSL."""

      def __init__(self, **defaults):
        Device_v2_2.Device.DSL.__init__(self, defaults=defaults)
        self.Export(lists=['BondingGroup',
                           'Channel',
                           'Line'])

      class BondingGroup(Device_v2_2.Device.DSL.BondingGroup):
        """Represents Device_v2_3.Device.DSL.BondingGroup.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.DSL.BondingGroup.__init__(self, defaults=defaults)
          self.Export(params=['Alias'],
                      lists=['BondedChannel'])

        class BondedChannel(Device_v2_2.Device.DSL.BondingGroup.BondedChannel):
          """Represents Device_v2_3.Device.DSL.BondingGroup.{i}.BondedChannel.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.DSL.BondingGroup.BondedChannel.__init__(self, defaults=defaults)
            self.Export(params=['Alias'])

      class Channel(Device_v2_2.Device.DSL.Channel):
        """Represents Device_v2_3.Device.DSL.Channel.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.DSL.Channel.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

      class Line(Device_v2_2.Device.DSL.Line):
        """Represents Device_v2_3.Device.DSL.Line.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.DSL.Line.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

    class DSLite(Device_v2_2.Device.DSLite):
      """Represents Device_v2_3.Device.DSLite."""

      def __init__(self, **defaults):
        Device_v2_2.Device.DSLite.__init__(self, defaults=defaults)
        self.Export(lists=['InterfaceSetting'])

      class InterfaceSetting(Device_v2_2.Device.DSLite.InterfaceSetting):
        """Represents Device_v2_3.Device.DSLite.InterfaceSetting.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.DSLite.InterfaceSetting.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

    class Ethernet(Device_v2_2.Device.Ethernet):
      """Represents Device_v2_3.Device.Ethernet."""

      def __init__(self, **defaults):
        Device_v2_2.Device.Ethernet.__init__(self, defaults=defaults)
        self.Export(lists=['Interface',
                           'Link',
                           'VLANTermination'])

      class Interface(Device_v2_2.Device.Ethernet.Interface):
        """Represents Device_v2_3.Device.Ethernet.Interface.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.Ethernet.Interface.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

      class Link(Device_v2_2.Device.Ethernet.Link):
        """Represents Device_v2_3.Device.Ethernet.Link.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.Ethernet.Link.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

      class VLANTermination(Device_v2_2.Device.Ethernet.VLANTermination):
        """Represents Device_v2_3.Device.Ethernet.VLANTermination.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.Ethernet.VLANTermination.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

    class Firewall(Device_v2_2.Device.Firewall):
      """Represents Device_v2_3.Device.Firewall."""

      def __init__(self, **defaults):
        Device_v2_2.Device.Firewall.__init__(self, defaults=defaults)
        self.Export(lists=['Chain',
                           'Level'])

      class Chain(Device_v2_2.Device.Firewall.Chain):
        """Represents Device_v2_3.Device.Firewall.Chain.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.Firewall.Chain.__init__(self, defaults=defaults)
          self.Export(params=['Alias'],
                      lists=['Rule'])

        class Rule(Device_v2_2.Device.Firewall.Chain.Rule):
          """Represents Device_v2_3.Device.Firewall.Chain.{i}.Rule.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.Firewall.Chain.Rule.__init__(self, defaults=defaults)
            self.Export(params=['Alias'])

      class Level(Device_v2_2.Device.Firewall.Level):
        """Represents Device_v2_3.Device.Firewall.Level.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.Firewall.Level.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

    class HPNA(Device_v2_2.Device.HPNA):
      """Represents Device_v2_3.Device.HPNA."""

      def __init__(self, **defaults):
        Device_v2_2.Device.HPNA.__init__(self, defaults=defaults)
        self.Export(lists=['Interface'])

      class Interface(Device_v2_2.Device.HPNA.Interface):
        """Represents Device_v2_3.Device.HPNA.Interface.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.HPNA.Interface.__init__(self, defaults=defaults)
          self.Export(params=['Alias'],
                      objects=['QoS'])

        class QoS(Device_v2_2.Device.HPNA.Interface.QoS):
          """Represents Device_v2_3.Device.HPNA.Interface.{i}.QoS."""

          def __init__(self, **defaults):
            Device_v2_2.Device.HPNA.Interface.QoS.__init__(self, defaults=defaults)
            self.Export(lists=['FlowSpec'])

          class FlowSpec(Device_v2_2.Device.HPNA.Interface.QoS.FlowSpec):
            """Represents Device_v2_3.Device.HPNA.Interface.{i}.QoS.FlowSpec.{i}."""

            def __init__(self, **defaults):
              Device_v2_2.Device.HPNA.Interface.QoS.FlowSpec.__init__(self, defaults=defaults)
              self.Export(params=['Alias'])

    class HomePlug(Device_v2_2.Device.HomePlug):
      """Represents Device_v2_3.Device.HomePlug."""

      def __init__(self, **defaults):
        Device_v2_2.Device.HomePlug.__init__(self, defaults=defaults)
        self.Export(lists=['Interface'])

      class Interface(Device_v2_2.Device.HomePlug.Interface):
        """Represents Device_v2_3.Device.HomePlug.Interface.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.HomePlug.Interface.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

    class Hosts(Device_v2_2.Device.Hosts):
      """Represents Device_v2_3.Device.Hosts."""

      def __init__(self, **defaults):
        Device_v2_2.Device.Hosts.__init__(self, defaults=defaults)
        self.Export(lists=['Host'])

      class Host(Device_v2_2.Device.Hosts.Host):
        """Represents Device_v2_3.Device.Hosts.Host.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.Hosts.Host.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

    class IEEE8021x(Device_v2_2.Device.IEEE8021x):
      """Represents Device_v2_3.Device.IEEE8021x."""

      def __init__(self, **defaults):
        Device_v2_2.Device.IEEE8021x.__init__(self, defaults=defaults)
        self.Export(lists=['Supplicant'])

      class Supplicant(Device_v2_2.Device.IEEE8021x.Supplicant):
        """Represents Device_v2_3.Device.IEEE8021x.Supplicant.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.IEEE8021x.Supplicant.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

    class IP(Device_v2_2.Device.IP):
      """Represents Device_v2_3.Device.IP."""

      def __init__(self, **defaults):
        Device_v2_2.Device.IP.__init__(self, defaults=defaults)
        self.Export(lists=['Interface'])

      class Interface(Device_v2_2.Device.IP.Interface):
        """Represents Device_v2_3.Device.IP.Interface.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.IP.Interface.__init__(self, defaults=defaults)
          self.Export(params=['Alias'],
                      lists=['IPv4Address',
                             'IPv6Address',
                             'IPv6Prefix'])

        class IPv4Address(Device_v2_2.Device.IP.Interface.IPv4Address):
          """Represents Device_v2_3.Device.IP.Interface.{i}.IPv4Address.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.IP.Interface.IPv4Address.__init__(self, defaults=defaults)
            self.Export(params=['Alias'])

        class IPv6Address(Device_v2_2.Device.IP.Interface.IPv6Address):
          """Represents Device_v2_3.Device.IP.Interface.{i}.IPv6Address.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.IP.Interface.IPv6Address.__init__(self, defaults=defaults)
            self.Export(params=['Alias'])

        class IPv6Prefix(Device_v2_2.Device.IP.Interface.IPv6Prefix):
          """Represents Device_v2_3.Device.IP.Interface.{i}.IPv6Prefix.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.IP.Interface.IPv6Prefix.__init__(self, defaults=defaults)
            self.Export(params=['Alias'])

    class IPv6rd(Device_v2_2.Device.IPv6rd):
      """Represents Device_v2_3.Device.IPv6rd."""

      def __init__(self, **defaults):
        Device_v2_2.Device.IPv6rd.__init__(self, defaults=defaults)
        self.Export(lists=['InterfaceSetting'])

      class InterfaceSetting(Device_v2_2.Device.IPv6rd.InterfaceSetting):
        """Represents Device_v2_3.Device.IPv6rd.InterfaceSetting.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.IPv6rd.InterfaceSetting.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

    class InterfaceStack(Device_v2_2.Device.InterfaceStack):
      """Represents Device_v2_3.Device.InterfaceStack.{i}."""

      def __init__(self, **defaults):
        Device_v2_2.Device.InterfaceStack.__init__(self, defaults=defaults)
        self.Export(params=['Alias'])

    class ManagementServer(Device_v2_2.Device.ManagementServer):
      """Represents Device_v2_3.Device.ManagementServer."""

      def __init__(self, **defaults):
        Device_v2_2.Device.ManagementServer.__init__(self, defaults=defaults)
        self.Export(params=['AliasBasedAddressing',
                            'AutoCreateInstances',
                            'InstanceMode'],
                    lists=['ManageableDevice'])

      class ManageableDevice(Device_v2_2.Device.ManagementServer.ManageableDevice):
        """Represents Device_v2_3.Device.ManagementServer.ManageableDevice.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.ManagementServer.ManageableDevice.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

    class MoCA(Device_v2_2.Device.MoCA):
      """Represents Device_v2_3.Device.MoCA."""

      def __init__(self, **defaults):
        Device_v2_2.Device.MoCA.__init__(self, defaults=defaults)
        self.Export(lists=['Interface'])

      class Interface(Device_v2_2.Device.MoCA.Interface):
        """Represents Device_v2_3.Device.MoCA.Interface.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.MoCA.Interface.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

    class NAT(Device_v2_2.Device.NAT):
      """Represents Device_v2_3.Device.NAT."""

      def __init__(self, **defaults):
        Device_v2_2.Device.NAT.__init__(self, defaults=defaults)
        self.Export(lists=['InterfaceSetting',
                           'PortMapping'])

      class InterfaceSetting(Device_v2_2.Device.NAT.InterfaceSetting):
        """Represents Device_v2_3.Device.NAT.InterfaceSetting.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.NAT.InterfaceSetting.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

      class PortMapping(Device_v2_2.Device.NAT.PortMapping):
        """Represents Device_v2_3.Device.NAT.PortMapping.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.NAT.PortMapping.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

    class NeighborDiscovery(Device_v2_2.Device.NeighborDiscovery):
      """Represents Device_v2_3.Device.NeighborDiscovery."""

      def __init__(self, **defaults):
        Device_v2_2.Device.NeighborDiscovery.__init__(self, defaults=defaults)
        self.Export(lists=['InterfaceSetting'])

      class InterfaceSetting(Device_v2_2.Device.NeighborDiscovery.InterfaceSetting):
        """Represents Device_v2_3.Device.NeighborDiscovery.InterfaceSetting.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.NeighborDiscovery.InterfaceSetting.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

    class PPP(Device_v2_2.Device.PPP):
      """Represents Device_v2_3.Device.PPP."""

      def __init__(self, **defaults):
        Device_v2_2.Device.PPP.__init__(self, defaults=defaults)
        self.Export(lists=['Interface'])

      class Interface(Device_v2_2.Device.PPP.Interface):
        """Represents Device_v2_3.Device.PPP.Interface.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.PPP.Interface.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

    class PTM(Device_v2_2.Device.PTM):
      """Represents Device_v2_3.Device.PTM."""

      def __init__(self, **defaults):
        Device_v2_2.Device.PTM.__init__(self, defaults=defaults)
        self.Export(lists=['Link'])

      class Link(Device_v2_2.Device.PTM.Link):
        """Represents Device_v2_3.Device.PTM.Link.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.PTM.Link.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

    class QoS(Device_v2_2.Device.QoS):
      """Represents Device_v2_3.Device.QoS."""

      def __init__(self, **defaults):
        Device_v2_2.Device.QoS.__init__(self, defaults=defaults)
        self.Export(lists=['App',
                           'Classification',
                           'Flow',
                           'Policer',
                           'Queue',
                           'QueueStats',
                           'Shaper'])

      class App(Device_v2_2.Device.QoS.App):
        """Represents Device_v2_3.Device.QoS.App.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.QoS.App.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

      class Classification(Device_v2_2.Device.QoS.Classification):
        """Represents Device_v2_3.Device.QoS.Classification.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.QoS.Classification.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

      class Flow(Device_v2_2.Device.QoS.Flow):
        """Represents Device_v2_3.Device.QoS.Flow.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.QoS.Flow.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

      class Policer(Device_v2_2.Device.QoS.Policer):
        """Represents Device_v2_3.Device.QoS.Policer.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.QoS.Policer.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

      class Queue(Device_v2_2.Device.QoS.Queue):
        """Represents Device_v2_3.Device.QoS.Queue.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.QoS.Queue.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

      class QueueStats(Device_v2_2.Device.QoS.QueueStats):
        """Represents Device_v2_3.Device.QoS.QueueStats.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.QoS.QueueStats.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

      class Shaper(Device_v2_2.Device.QoS.Shaper):
        """Represents Device_v2_3.Device.QoS.Shaper.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.QoS.Shaper.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

    class RouterAdvertisement(Device_v2_2.Device.RouterAdvertisement):
      """Represents Device_v2_3.Device.RouterAdvertisement."""

      def __init__(self, **defaults):
        Device_v2_2.Device.RouterAdvertisement.__init__(self, defaults=defaults)
        self.Export(lists=['InterfaceSetting'])

      class InterfaceSetting(Device_v2_2.Device.RouterAdvertisement.InterfaceSetting):
        """Represents Device_v2_3.Device.RouterAdvertisement.InterfaceSetting.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.RouterAdvertisement.InterfaceSetting.__init__(self, defaults=defaults)
          self.Export(params=['Alias'],
                      lists=['Option'])

        class Option(Device_v2_2.Device.RouterAdvertisement.InterfaceSetting.Option):
          """Represents Device_v2_3.Device.RouterAdvertisement.InterfaceSetting.{i}.Option.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.RouterAdvertisement.InterfaceSetting.Option.__init__(self, defaults=defaults)
            self.Export(params=['Alias'])

    class Routing(Device_v2_2.Device.Routing):
      """Represents Device_v2_3.Device.Routing."""

      def __init__(self, **defaults):
        Device_v2_2.Device.Routing.__init__(self, defaults=defaults)
        self.Export(objects=['RIP'],
                    lists=['Router'])

      class RIP(Device_v2_2.Device.Routing.RIP):
        """Represents Device_v2_3.Device.Routing.RIP."""

        def __init__(self, **defaults):
          Device_v2_2.Device.Routing.RIP.__init__(self, defaults=defaults)
          self.Export(lists=['InterfaceSetting'])

        class InterfaceSetting(Device_v2_2.Device.Routing.RIP.InterfaceSetting):
          """Represents Device_v2_3.Device.Routing.RIP.InterfaceSetting.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.Routing.RIP.InterfaceSetting.__init__(self, defaults=defaults)
            self.Export(params=['Alias'])

      class Router(Device_v2_2.Device.Routing.Router):
        """Represents Device_v2_3.Device.Routing.Router.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.Routing.Router.__init__(self, defaults=defaults)
          self.Export(params=['Alias'],
                      lists=['IPv4Forwarding',
                             'IPv6Forwarding'])

        class IPv4Forwarding(Device_v2_2.Device.Routing.Router.IPv4Forwarding):
          """Represents Device_v2_3.Device.Routing.Router.{i}.IPv4Forwarding.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.Routing.Router.IPv4Forwarding.__init__(self, defaults=defaults)
            self.Export(params=['Alias'])

        class IPv6Forwarding(Device_v2_2.Device.Routing.Router.IPv6Forwarding):
          """Represents Device_v2_3.Device.Routing.Router.{i}.IPv6Forwarding.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.Routing.Router.IPv6Forwarding.__init__(self, defaults=defaults)
            self.Export(params=['Alias'])

    class UPA(Device_v2_2.Device.UPA):
      """Represents Device_v2_3.Device.UPA."""

      def __init__(self, **defaults):
        Device_v2_2.Device.UPA.__init__(self, defaults=defaults)
        self.Export(lists=['Interface'])

      class Interface(Device_v2_2.Device.UPA.Interface):
        """Represents Device_v2_3.Device.UPA.Interface.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.UPA.Interface.__init__(self, defaults=defaults)
          self.Export(params=['Alias'],
                      lists=['ActiveNotch',
                             'BridgeFor'])

        class ActiveNotch(Device_v2_2.Device.UPA.Interface.ActiveNotch):
          """Represents Device_v2_3.Device.UPA.Interface.{i}.ActiveNotch.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.UPA.Interface.ActiveNotch.__init__(self, defaults=defaults)
            self.Export(params=['Alias'])

        class BridgeFor(Device_v2_2.Device.UPA.Interface.BridgeFor):
          """Represents Device_v2_3.Device.UPA.Interface.{i}.BridgeFor.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.UPA.Interface.BridgeFor.__init__(self, defaults=defaults)
            self.Export(params=['Alias'])

    class USB(Device_v2_2.Device.USB):
      """Represents Device_v2_3.Device.USB."""

      def __init__(self, **defaults):
        Device_v2_2.Device.USB.__init__(self, defaults=defaults)
        self.Export(lists=['Interface',
                           'Port'])

      class Interface(Device_v2_2.Device.USB.Interface):
        """Represents Device_v2_3.Device.USB.Interface.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.USB.Interface.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

      class Port(Device_v2_2.Device.USB.Port):
        """Represents Device_v2_3.Device.USB.Port.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.USB.Port.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

    class WiFi(Device_v2_2.Device.WiFi):
      """Represents Device_v2_3.Device.WiFi."""

      def __init__(self, **defaults):
        Device_v2_2.Device.WiFi.__init__(self, defaults=defaults)
        self.Export(lists=['AccessPoint',
                           'EndPoint',
                           'Radio',
                           'SSID'])

      class AccessPoint(Device_v2_2.Device.WiFi.AccessPoint):
        """Represents Device_v2_3.Device.WiFi.AccessPoint.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.WiFi.AccessPoint.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

      class EndPoint(Device_v2_2.Device.WiFi.EndPoint):
        """Represents Device_v2_3.Device.WiFi.EndPoint.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.WiFi.EndPoint.__init__(self, defaults=defaults)
          self.Export(params=['Alias'],
                      lists=['Profile'])

        class Profile(Device_v2_2.Device.WiFi.EndPoint.Profile):
          """Represents Device_v2_3.Device.WiFi.EndPoint.{i}.Profile.{i}."""

          def __init__(self, **defaults):
            Device_v2_2.Device.WiFi.EndPoint.Profile.__init__(self, defaults=defaults)
            self.Export(params=['Alias'])

      class Radio(Device_v2_2.Device.WiFi.Radio):
        """Represents Device_v2_3.Device.WiFi.Radio.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.WiFi.Radio.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

      class SSID(Device_v2_2.Device.WiFi.SSID):
        """Represents Device_v2_3.Device.WiFi.SSID.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.Device.WiFi.SSID.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

  class DeviceInfo(Device_v2_2.DeviceInfo):
    """Represents Device_v2_3.DeviceInfo."""

    def __init__(self, **defaults):
      Device_v2_2.DeviceInfo.__init__(self, defaults=defaults)
      self.Export(objects=['ProxierInfo',
                           'TemperatureStatus'],
                  lists=['Processor',
                         'SupportedDataModel',
                         'VendorConfigFile',
                         'VendorLogFile'])

    class Processor(Device_v2_2.DeviceInfo.Processor):
      """Represents Device_v2_3.DeviceInfo.Processor.{i}."""

      def __init__(self, **defaults):
        Device_v2_2.DeviceInfo.Processor.__init__(self, defaults=defaults)
        self.Export(params=['Alias'])

    class ProxierInfo(core.Exporter):
      """Represents Device_v2_3.DeviceInfo.ProxierInfo."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['ManufacturerOUI',
                            'ProductClass',
                            'ProxyProtocol',
                            'SerialNumber'])

    class SupportedDataModel(Device_v2_2.DeviceInfo.SupportedDataModel):
      """Represents Device_v2_3.DeviceInfo.SupportedDataModel.{i}."""

      def __init__(self, **defaults):
        Device_v2_2.DeviceInfo.SupportedDataModel.__init__(self, defaults=defaults)
        self.Export(params=['Alias'])

    class TemperatureStatus(Device_v2_2.DeviceInfo.TemperatureStatus):
      """Represents Device_v2_3.DeviceInfo.TemperatureStatus."""

      def __init__(self, **defaults):
        Device_v2_2.DeviceInfo.TemperatureStatus.__init__(self, defaults=defaults)
        self.Export(lists=['TemperatureSensor'])

      class TemperatureSensor(Device_v2_2.DeviceInfo.TemperatureStatus.TemperatureSensor):
        """Represents Device_v2_3.DeviceInfo.TemperatureStatus.TemperatureSensor.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.DeviceInfo.TemperatureStatus.TemperatureSensor.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

    class VendorConfigFile(Device_v2_2.DeviceInfo.VendorConfigFile):
      """Represents Device_v2_3.DeviceInfo.VendorConfigFile.{i}."""

      def __init__(self, **defaults):
        Device_v2_2.DeviceInfo.VendorConfigFile.__init__(self, defaults=defaults)
        self.Export(params=['Alias'])

    class VendorLogFile(Device_v2_2.DeviceInfo.VendorLogFile):
      """Represents Device_v2_3.DeviceInfo.VendorLogFile.{i}."""

      def __init__(self, **defaults):
        Device_v2_2.DeviceInfo.VendorLogFile.__init__(self, defaults=defaults)
        self.Export(params=['Alias'])

  class DownloadAvailability(Device_v2_2.DownloadAvailability):
    """Represents Device_v2_3.DownloadAvailability."""

    def __init__(self, **defaults):
      Device_v2_2.DownloadAvailability.__init__(self, defaults=defaults)
      self.Export(objects=['Announcement'])

    class Announcement(Device_v2_2.DownloadAvailability.Announcement):
      """Represents Device_v2_3.DownloadAvailability.Announcement."""

      def __init__(self, **defaults):
        Device_v2_2.DownloadAvailability.Announcement.__init__(self, defaults=defaults)
        self.Export(lists=['Group'])

      class Group(Device_v2_2.DownloadAvailability.Announcement.Group):
        """Represents Device_v2_3.DownloadAvailability.Announcement.Group.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.DownloadAvailability.Announcement.Group.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

  class ManagementServer(Device_v2_2.ManagementServer):
    """Represents Device_v2_3.ManagementServer."""

    def __init__(self, **defaults):
      Device_v2_2.ManagementServer.__init__(self, defaults=defaults)
      self.Export(params=['EmbeddedDeviceNumberOfEntries',
                          'VirtualDeviceNumberOfEntries'],
                  lists=['EmbeddedDevice',
                         'VirtualDevice'])

    class EmbeddedDevice(core.Exporter):
      """Represents Device_v2_3.ManagementServer.EmbeddedDevice.{i}."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['CommandProcessed',
                            'CommandProcessingErrMsg',
                            'ControllerID',
                            'Host',
                            'LastSyncTime',
                            'ProxiedDeviceID',
                            'ProxyProtocol',
                            'Reference',
                            'SupportedDataModel'])

    class VirtualDevice(core.Exporter):
      """Represents Device_v2_3.ManagementServer.VirtualDevice.{i}."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['Host',
                            'ManufacturerOUI',
                            'ProductClass',
                            'ProxyProtocol',
                            'SerialNumber'])

  class NSLookupDiagnostics(Device_v2_2.NSLookupDiagnostics):
    """Represents Device_v2_3.NSLookupDiagnostics."""

    def __init__(self, **defaults):
      Device_v2_2.NSLookupDiagnostics.__init__(self, defaults=defaults)
      self.Export(params=['DiagnosticsState'])

  class PeriodicStatistics(Device_v2_2.PeriodicStatistics):
    """Represents Device_v2_3.PeriodicStatistics."""

    def __init__(self, **defaults):
      Device_v2_2.PeriodicStatistics.__init__(self, defaults=defaults)
      self.Export(lists=['SampleSet'])

    class SampleSet(Device_v2_2.PeriodicStatistics.SampleSet):
      """Represents Device_v2_3.PeriodicStatistics.SampleSet.{i}."""

      def __init__(self, **defaults):
        Device_v2_2.PeriodicStatistics.SampleSet.__init__(self, defaults=defaults)
        self.Export(params=['Alias'],
                    lists=['Parameter'])

      class Parameter(Device_v2_2.PeriodicStatistics.SampleSet.Parameter):
        """Represents Device_v2_3.PeriodicStatistics.SampleSet.{i}.Parameter.{i}."""

        def __init__(self, **defaults):
          Device_v2_2.PeriodicStatistics.SampleSet.Parameter.__init__(self, defaults=defaults)
          self.Export(params=['Alias'])

  class SmartCardReader(Device_v2_2.SmartCardReader):
    """Represents Device_v2_3.SmartCardReader.{i}."""

    def __init__(self, **defaults):
      Device_v2_2.SmartCardReader.__init__(self, defaults=defaults)
      self.Export(params=['Alias'])

  class SoftwareModules(Device_v2_2.SoftwareModules):
    """Represents Device_v2_3.SoftwareModules."""

    def __init__(self, **defaults):
      Device_v2_2.SoftwareModules.__init__(self, defaults=defaults)
      self.Export(lists=['DeploymentUnit',
                         'ExecEnv',
                         'ExecutionUnit'])

    class DeploymentUnit(Device_v2_2.SoftwareModules.DeploymentUnit):
      """Represents Device_v2_3.SoftwareModules.DeploymentUnit.{i}."""

      def __init__(self, **defaults):
        Device_v2_2.SoftwareModules.DeploymentUnit.__init__(self, defaults=defaults)
        self.Export(params=['Alias'])

    class ExecEnv(Device_v2_2.SoftwareModules.ExecEnv):
      """Represents Device_v2_3.SoftwareModules.ExecEnv.{i}."""

      def __init__(self, **defaults):
        Device_v2_2.SoftwareModules.ExecEnv.__init__(self, defaults=defaults)
        self.Export(params=['Alias'])

    class ExecutionUnit(Device_v2_2.SoftwareModules.ExecutionUnit):
      """Represents Device_v2_3.SoftwareModules.ExecutionUnit.{i}."""

      def __init__(self, **defaults):
        Device_v2_2.SoftwareModules.ExecutionUnit.__init__(self, defaults=defaults)
        self.Export(params=['Alias'])

  class USBHosts(Device_v2_2.USBHosts):
    """Represents Device_v2_3.USBHosts."""

    def __init__(self, **defaults):
      Device_v2_2.USBHosts.__init__(self, defaults=defaults)
      self.Export(lists=['Host'])

    class Host(Device_v2_2.USBHosts.Host):
      """Represents Device_v2_3.USBHosts.Host.{i}."""

      def __init__(self, **defaults):
        Device_v2_2.USBHosts.Host.__init__(self, defaults=defaults)
        self.Export(params=['Alias'])

  class User(Device_v2_2.User):
    """Represents Device_v2_3.User.{i}."""

    def __init__(self, **defaults):
      Device_v2_2.User.__init__(self, defaults=defaults)
      self.Export(params=['Alias'])


if __name__ == '__main__':
  print core.DumpSchema(Device_v2_3)
