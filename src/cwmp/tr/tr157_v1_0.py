#!/usr/bin/python
# Copyright 2011 Google Inc. All Rights Reserved.
#
# AUTO-GENERATED BY parse-schema.py
#
# DO NOT EDIT!!
#
#pylint: disable-msg=C6202
#pylint: disable-msg=C6409
#pylint: disable-msg=C6310
# These should not actually be necessary (bugs in gpylint?):
#pylint: disable-msg=E1101
#pylint: disable-msg=W0231
#
"""Auto-generated from spec: urn:broadband-forum-org:tr-157-1-0."""

import core
from tr098_v1_2 import InternetGatewayDevice_v1_4
from tr106_v1_2 import Device_v1_2


class Device_v1_3(Device_v1_2):
  """Represents Device_v1_3."""

  def __init__(self, **defaults):
    Device_v1_2.__init__(self, defaults=defaults)
    self.Export(params=['SmartCardReaderNumberOfEntries',
                        'UserNumberOfEntries'],
                objects=['DLNA',
                         'DeviceInfo',
                         'DownloadAvailability',
                         'Firewall',
                         'ManagementServer',
                         'NSLookupDiagnostics',
                         'PeriodicStatistics',
                         'SelfTestDiagnostics',
                         'UPnP',
                         'USBHosts',
                         'UserInterface'],
                lists=['SmartCardReader',
                       'User'])

  class DLNA(core.Exporter):
    """Represents Device_v1_3.DLNA."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(objects=['Capabilities'])

    class Capabilities(core.Exporter):
      """Represents Device_v1_3.DLNA.Capabilities."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['AVClassProfileID',
                            'AudioClassProfileID',
                            'DeviceCapability',
                            'HIDDeviceClass',
                            'HNDDeviceClass',
                            'ImageClassProfileID',
                            'MediaCollectionProfileID',
                            'PrinterClassProfileID'])

  class DeviceInfo(Device_v1_2.DeviceInfo):
    """Represents Device_v1_3.DeviceInfo."""

    def __init__(self, **defaults):
      Device_v1_2.DeviceInfo.__init__(self, defaults=defaults)
      self.Export(objects=['MemoryStatus',
                           'NetworkProperties',
                           'ProcessStatus',
                           'TemperatureStatus'])

    class MemoryStatus(core.Exporter):
      """Represents Device_v1_3.DeviceInfo.MemoryStatus."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['Free',
                            'Total'])

    class NetworkProperties(core.Exporter):
      """Represents Device_v1_3.DeviceInfo.NetworkProperties."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['MaxTCPWindowSize',
                            'TCPImplementation'])

    class ProcessStatus(core.Exporter):
      """Represents Device_v1_3.DeviceInfo.ProcessStatus."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['CPUUsage',
                            'ProcessNumberOfEntries'],
                    lists=['Process'])

      class Process(core.Exporter):
        """Represents Device_v1_3.DeviceInfo.ProcessStatus.Process.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['CPUTime',
                              'Command',
                              'PID',
                              'Priority',
                              'Size',
                              'State'])

    class TemperatureStatus(core.Exporter):
      """Represents Device_v1_3.DeviceInfo.TemperatureStatus."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['TemperatureSensorNumberOfEntries'],
                    lists=['TemperatureSensor'])

      class TemperatureSensor(core.Exporter):
        """Represents Device_v1_3.DeviceInfo.TemperatureStatus.TemperatureSensor.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['Enable',
                              'HighAlarmTime',
                              'HighAlarmValue',
                              'LastUpdate',
                              'LowAlarmTime',
                              'LowAlarmValue',
                              'MaxTime',
                              'MaxValue',
                              'MinTime',
                              'MinValue',
                              'Name',
                              'Reset',
                              'ResetTime',
                              'Status',
                              'Value'])

  class DownloadAvailability(core.Exporter):
    """Represents Device_v1_3.DownloadAvailability."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(objects=['Announcement',
                           'Query'])

    class Announcement(core.Exporter):
      """Represents Device_v1_3.DownloadAvailability.Announcement."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['Enable',
                            'GroupNumberOfEntries',
                            'Status'],
                    lists=['Group'])

      class Group(core.Exporter):
        """Represents Device_v1_3.DownloadAvailability.Announcement.Group.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['Enable',
                              'Status',
                              'URL'])

    class Query(core.Exporter):
      """Represents Device_v1_3.DownloadAvailability.Query."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['Enable',
                            'Status',
                            'URL'])

  class Firewall(core.Exporter):
    """Represents Device_v1_3.Firewall."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(params=['Config',
                          'LastChange',
                          'Version'])

  class ManagementServer(Device_v1_2.ManagementServer):
    """Represents Device_v1_3.ManagementServer."""

    def __init__(self, **defaults):
      Device_v1_2.ManagementServer.__init__(self, defaults=defaults)
      self.Export(objects=['AutonomousTransferCompletePolicy'])

    class AutonomousTransferCompletePolicy(core.Exporter):
      """Represents Device_v1_3.ManagementServer.AutonomousTransferCompletePolicy."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['Enable',
                            'FileTypeFilter',
                            'TransferTypeFilter'])

  class NSLookupDiagnostics(core.Exporter):
    """Represents Device_v1_3.NSLookupDiagnostics."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(params=['DNSServer',
                          'DiagnosticsState',
                          'HostName',
                          'Interface',
                          'NumberOfRepetitions',
                          'ResultNumberOfEntries',
                          'SuccessCount',
                          'Timeout'],
                  lists=['Result'])

    class Result(core.Exporter):
      """Represents Device_v1_3.NSLookupDiagnostics.Result.{i}."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['AnswerType',
                            'DNSServerIP',
                            'HostNameReturned',
                            'IPAddresses',
                            'ResponseTime',
                            'Status'])

  class PeriodicStatistics(core.Exporter):
    """Represents Device_v1_3.PeriodicStatistics."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(params=['MaxReportSamples',
                          'MinSampleInterval',
                          'SampleSetNumberOfEntries'],
                  lists=['SampleSet'])

    class SampleSet(core.Exporter):
      """Represents Device_v1_3.PeriodicStatistics.SampleSet.{i}."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['Enable',
                            'FetchSamples',
                            'ForceSample',
                            'Name',
                            'ParameterNumberOfEntries',
                            'ReportEndTime',
                            'ReportSamples',
                            'ReportStartTime',
                            'SampleInterval',
                            'SampleSeconds',
                            'Status',
                            'TimeReference'],
                    lists=['Parameter'])

      class Parameter(core.Exporter):
        """Represents Device_v1_3.PeriodicStatistics.SampleSet.{i}.Parameter.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['CalculationMode',
                              'Enable',
                              'Failures',
                              'HighThreshold',
                              'LowThreshold',
                              'Reference',
                              'SampleMode',
                              'SampleSeconds',
                              'SuspectData',
                              'Values'])

  class SelfTestDiagnostics(core.Exporter):
    """Represents Device_v1_3.SelfTestDiagnostics."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(params=['DiagnosticsState',
                          'Results'])

  class SmartCardReader(core.Exporter):
    """Represents Device_v1_3.SmartCardReader.{i}."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(params=['DecryptionFailedCounter',
                          'DecryptionFailedNoKeyCounter',
                          'Enable',
                          'Name',
                          'Reset',
                          'ResetTime',
                          'Status'],
                  objects=['SmartCard'])

    class SmartCard(core.Exporter):
      """Represents Device_v1_3.SmartCardReader.{i}.SmartCard."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['ATR',
                            'Application',
                            'SerialNumber',
                            'Status',
                            'Type'])

  class UPnP(core.Exporter):
    """Represents Device_v1_3.UPnP."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(objects=['Device',
                           'Discovery'])

    class Device(core.Exporter):
      """Represents Device_v1_3.UPnP.Device."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['Enable',
                            'UPnPIGD',
                            'UPnPMediaRenderer',
                            'UPnPMediaServer',
                            'UPnPQoSDevice ',
                            'UPnPQoSPolicyHolder',
                            'UPnPWLANAccessPoint'],
                    objects=['Capabilities'])

      class Capabilities(core.Exporter):
        """Represents Device_v1_3.UPnP.Device.Capabilities."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['UPnPArchitecture',
                              'UPnPBasicDevice',
                              'UPnPIGD',
                              'UPnPMediaRenderer',
                              'UPnPMediaServer',
                              'UPnPQoSDevice',
                              'UPnPQoSPolicyHolder',
                              'UPnPWLANAccessPoint'])

    class Discovery(core.Exporter):
      """Represents Device_v1_3.UPnP.Discovery."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['DeviceNumberOfEntries',
                            'RootDeviceNumberOfEntries',
                            'ServiceNumberOfEntries'],
                    lists=['Device',
                           'RootDevice',
                           'Service'])

      class Device(core.Exporter):
        """Represents Device_v1_3.UPnP.Discovery.Device.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['Host',
                              'LeaseTime',
                              'Location',
                              'Server',
                              'Status',
                              'USN',
                              'UUID'])

      class RootDevice(core.Exporter):
        """Represents Device_v1_3.UPnP.Discovery.RootDevice.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['Host',
                              'LeaseTime',
                              'Location',
                              'Server',
                              'Status',
                              'USN',
                              'UUID'])

      class Service(core.Exporter):
        """Represents Device_v1_3.UPnP.Discovery.Service.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['Host',
                              'LeaseTime',
                              'Location',
                              'Server',
                              'Status',
                              'USN'])

  class USBHosts(core.Exporter):
    """Represents Device_v1_3.USBHosts."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(params=['HostNumberOfEntries'],
                  lists=['Host'])

    class Host(core.Exporter):
      """Represents Device_v1_3.USBHosts.Host.{i}."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['DeviceNumberOfEntries',
                            'Enable',
                            'Name',
                            'PowerManagementEnable',
                            'Reset',
                            'Type',
                            'USBVersion'],
                    lists=['Device'])

      class Device(core.Exporter):
        """Represents Device_v1_3.USBHosts.Host.{i}.Device.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['ConfigurationNumberOfEntries',
                              'DeviceClass',
                              'DeviceNumber',
                              'DeviceProtocol',
                              'DeviceSubClass',
                              'DeviceVersion',
                              'IsSelfPowered',
                              'IsSuspended',
                              'Manufacturer',
                              'MaxChildren',
                              'Parent',
                              'Port',
                              'ProductClass',
                              'ProductID',
                              'Rate',
                              'SerialNumber',
                              'USBVersion',
                              'VendorID'],
                      lists=['Configuration'])

        class Configuration(core.Exporter):
          """Represents Device_v1_3.USBHosts.Host.{i}.Device.{i}.Configuration.{i}."""

          def __init__(self, **defaults):
            core.Exporter.__init__(self, defaults=defaults)
            self.Export(params=['ConfigurationNumber',
                                'InterfaceNumberOfEntries'],
                        lists=['Interface'])

          class Interface(core.Exporter):
            """Represents Device_v1_3.USBHosts.Host.{i}.Device.{i}.Configuration.{i}.Interface.{i}."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['InterfaceClass',
                                  'InterfaceNumber',
                                  'InterfaceProtocol',
                                  'InterfaceSubClass'])

  class User(core.Exporter):
    """Represents Device_v1_3.User.{i}."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(params=['Enable',
                          'Language',
                          'Password',
                          'RemoteAccessCapable',
                          'Username'])

  class UserInterface(Device_v1_2.UserInterface):
    """Represents Device_v1_3.UserInterface."""

    def __init__(self, **defaults):
      Device_v1_2.UserInterface.__init__(self, defaults=defaults)
      self.Export(objects=['LocalDisplay',
                           'RemoteAccess'])

    class LocalDisplay(core.Exporter):
      """Represents Device_v1_3.UserInterface.LocalDisplay."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['DisplayHeight',
                            'DisplayWidth',
                            'Height',
                            'Movable',
                            'PosX',
                            'PosY',
                            'Resizable',
                            'Width'])

    class RemoteAccess(core.Exporter):
      """Represents Device_v1_3.UserInterface.RemoteAccess."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['Enable',
                            'Port',
                            'Protocol',
                            'SupportedProtocols'])


class InternetGatewayDevice_v1_5(InternetGatewayDevice_v1_4):
  """Represents InternetGatewayDevice_v1_5."""

  def __init__(self, **defaults):
    InternetGatewayDevice_v1_4.__init__(self, defaults=defaults)
    self.Export(params=['SmartCardReaderNumberOfEntries',
                        'UserNumberOfEntries'],
                objects=['DLNA',
                         'DeviceInfo',
                         'DownloadAvailability',
                         'Firewall',
                         'ManagementServer',
                         'NSLookupDiagnostics',
                         'PeriodicStatistics',
                         'SelfTestDiagnostics',
                         'UPnP',
                         'USBHosts',
                         'UserInterface'],
                lists=['SmartCardReader',
                       'User'])

  class DLNA(core.Exporter):
    """Represents InternetGatewayDevice_v1_5.DLNA."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(objects=['Capabilities'])

    class Capabilities(core.Exporter):
      """Represents InternetGatewayDevice_v1_5.DLNA.Capabilities."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['AVClassProfileID',
                            'AudioClassProfileID',
                            'DeviceCapability',
                            'HIDDeviceClass',
                            'HNDDeviceClass',
                            'ImageClassProfileID',
                            'MediaCollectionProfileID',
                            'PrinterClassProfileID'])

  class DeviceInfo(core.Exporter):
    """Represents InternetGatewayDevice_v1_5.DeviceInfo."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(objects=['MemoryStatus',
                           'NetworkProperties',
                           'ProcessStatus',
                           'TemperatureStatus'])

    class MemoryStatus(core.Exporter):
      """Represents InternetGatewayDevice_v1_5.DeviceInfo.MemoryStatus."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['Free',
                            'Total'])

    class NetworkProperties(core.Exporter):
      """Represents InternetGatewayDevice_v1_5.DeviceInfo.NetworkProperties."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['MaxTCPWindowSize',
                            'TCPImplementation'])

    class ProcessStatus(core.Exporter):
      """Represents InternetGatewayDevice_v1_5.DeviceInfo.ProcessStatus."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['CPUUsage',
                            'ProcessNumberOfEntries'],
                    lists=['Process'])

      class Process(core.Exporter):
        """Represents InternetGatewayDevice_v1_5.DeviceInfo.ProcessStatus.Process.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['CPUTime',
                              'Command',
                              'PID',
                              'Priority',
                              'Size',
                              'State'])

    class TemperatureStatus(core.Exporter):
      """Represents InternetGatewayDevice_v1_5.DeviceInfo.TemperatureStatus."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['TemperatureSensorNumberOfEntries'],
                    lists=['TemperatureSensor'])

      class TemperatureSensor(core.Exporter):
        """Represents InternetGatewayDevice_v1_5.DeviceInfo.TemperatureStatus.TemperatureSensor.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['Enable',
                              'HighAlarmTime',
                              'HighAlarmValue',
                              'LastUpdate',
                              'LowAlarmTime',
                              'LowAlarmValue',
                              'MaxTime',
                              'MaxValue',
                              'MinTime',
                              'MinValue',
                              'Name',
                              'Reset',
                              'ResetTime',
                              'Status',
                              'Value'])

  class DownloadAvailability(core.Exporter):
    """Represents InternetGatewayDevice_v1_5.DownloadAvailability."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(objects=['Announcement',
                           'Query'])

    class Announcement(core.Exporter):
      """Represents InternetGatewayDevice_v1_5.DownloadAvailability.Announcement."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['Enable',
                            'GroupNumberOfEntries',
                            'Status'],
                    lists=['Group'])

      class Group(core.Exporter):
        """Represents InternetGatewayDevice_v1_5.DownloadAvailability.Announcement.Group.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['Enable',
                              'Status',
                              'URL'])

    class Query(core.Exporter):
      """Represents InternetGatewayDevice_v1_5.DownloadAvailability.Query."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['Enable',
                            'Status',
                            'URL'])

  class Firewall(core.Exporter):
    """Represents InternetGatewayDevice_v1_5.Firewall."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(params=['Config',
                          'LastChange',
                          'Version'])

  class ManagementServer(core.Exporter):
    """Represents InternetGatewayDevice_v1_5.ManagementServer."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(objects=['AutonomousTransferCompletePolicy'])

    class AutonomousTransferCompletePolicy(core.Exporter):
      """Represents InternetGatewayDevice_v1_5.ManagementServer.AutonomousTransferCompletePolicy."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['Enable',
                            'FileTypeFilter',
                            'TransferTypeFilter'])

  class NSLookupDiagnostics(core.Exporter):
    """Represents InternetGatewayDevice_v1_5.NSLookupDiagnostics."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(params=['DNSServer',
                          'DiagnosticsState',
                          'HostName',
                          'Interface',
                          'NumberOfRepetitions',
                          'ResultNumberOfEntries',
                          'SuccessCount',
                          'Timeout'],
                  lists=['Result'])

    class Result(core.Exporter):
      """Represents InternetGatewayDevice_v1_5.NSLookupDiagnostics.Result.{i}."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['AnswerType',
                            'DNSServerIP',
                            'HostNameReturned',
                            'IPAddresses',
                            'ResponseTime',
                            'Status'])

  class PeriodicStatistics(core.Exporter):
    """Represents InternetGatewayDevice_v1_5.PeriodicStatistics."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(params=['MaxReportSamples',
                          'MinSampleInterval',
                          'SampleSetNumberOfEntries'],
                  lists=['SampleSet'])

    class SampleSet(core.Exporter):
      """Represents InternetGatewayDevice_v1_5.PeriodicStatistics.SampleSet.{i}."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['Enable',
                            'FetchSamples',
                            'ForceSample',
                            'Name',
                            'ParameterNumberOfEntries',
                            'ReportEndTime',
                            'ReportSamples',
                            'ReportStartTime',
                            'SampleInterval',
                            'SampleSeconds',
                            'Status',
                            'TimeReference'],
                    lists=['Parameter'])

      class Parameter(core.Exporter):
        """Represents InternetGatewayDevice_v1_5.PeriodicStatistics.SampleSet.{i}.Parameter.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['CalculationMode',
                              'Enable',
                              'Failures',
                              'HighThreshold',
                              'LowThreshold',
                              'Reference',
                              'SampleMode',
                              'SampleSeconds',
                              'SuspectData',
                              'Values'])

  class SelfTestDiagnostics(core.Exporter):
    """Represents InternetGatewayDevice_v1_5.SelfTestDiagnostics."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(params=['DiagnosticsState',
                          'Results'])

  class SmartCardReader(core.Exporter):
    """Represents InternetGatewayDevice_v1_5.SmartCardReader.{i}."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(params=['DecryptionFailedCounter',
                          'DecryptionFailedNoKeyCounter',
                          'Enable',
                          'Name',
                          'Reset',
                          'ResetTime',
                          'Status'],
                  objects=['SmartCard'])

    class SmartCard(core.Exporter):
      """Represents InternetGatewayDevice_v1_5.SmartCardReader.{i}.SmartCard."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['ATR',
                            'Application',
                            'SerialNumber',
                            'Status',
                            'Type'])

  class UPnP(core.Exporter):
    """Represents InternetGatewayDevice_v1_5.UPnP."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(objects=['Device',
                           'Discovery'])

    class Device(core.Exporter):
      """Represents InternetGatewayDevice_v1_5.UPnP.Device."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['Enable',
                            'UPnPIGD',
                            'UPnPMediaRenderer',
                            'UPnPMediaServer',
                            'UPnPQoSDevice ',
                            'UPnPQoSPolicyHolder',
                            'UPnPWLANAccessPoint'],
                    objects=['Capabilities'])

      class Capabilities(core.Exporter):
        """Represents InternetGatewayDevice_v1_5.UPnP.Device.Capabilities."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['UPnPArchitecture',
                              'UPnPBasicDevice',
                              'UPnPIGD',
                              'UPnPMediaRenderer',
                              'UPnPMediaServer',
                              'UPnPQoSDevice',
                              'UPnPQoSPolicyHolder',
                              'UPnPWLANAccessPoint'])

    class Discovery(core.Exporter):
      """Represents InternetGatewayDevice_v1_5.UPnP.Discovery."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['DeviceNumberOfEntries',
                            'RootDeviceNumberOfEntries',
                            'ServiceNumberOfEntries'],
                    lists=['Device',
                           'RootDevice',
                           'Service'])

      class Device(core.Exporter):
        """Represents InternetGatewayDevice_v1_5.UPnP.Discovery.Device.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['Host',
                              'LeaseTime',
                              'Location',
                              'Server',
                              'Status',
                              'USN',
                              'UUID'])

      class RootDevice(core.Exporter):
        """Represents InternetGatewayDevice_v1_5.UPnP.Discovery.RootDevice.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['Host',
                              'LeaseTime',
                              'Location',
                              'Server',
                              'Status',
                              'USN',
                              'UUID'])

      class Service(core.Exporter):
        """Represents InternetGatewayDevice_v1_5.UPnP.Discovery.Service.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['Host',
                              'LeaseTime',
                              'Location',
                              'Server',
                              'Status',
                              'USN'])

  class USBHosts(core.Exporter):
    """Represents InternetGatewayDevice_v1_5.USBHosts."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(params=['HostNumberOfEntries'],
                  lists=['Host'])

    class Host(core.Exporter):
      """Represents InternetGatewayDevice_v1_5.USBHosts.Host.{i}."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['DeviceNumberOfEntries',
                            'Enable',
                            'Name',
                            'PowerManagementEnable',
                            'Reset',
                            'Type',
                            'USBVersion'],
                    lists=['Device'])

      class Device(core.Exporter):
        """Represents InternetGatewayDevice_v1_5.USBHosts.Host.{i}.Device.{i}."""

        def __init__(self, **defaults):
          core.Exporter.__init__(self, defaults=defaults)
          self.Export(params=['ConfigurationNumberOfEntries',
                              'DeviceClass',
                              'DeviceNumber',
                              'DeviceProtocol',
                              'DeviceSubClass',
                              'DeviceVersion',
                              'IsSelfPowered',
                              'IsSuspended',
                              'Manufacturer',
                              'MaxChildren',
                              'Parent',
                              'Port',
                              'ProductClass',
                              'ProductID',
                              'Rate',
                              'SerialNumber',
                              'USBVersion',
                              'VendorID'],
                      lists=['Configuration'])

        class Configuration(core.Exporter):
          """Represents InternetGatewayDevice_v1_5.USBHosts.Host.{i}.Device.{i}.Configuration.{i}."""

          def __init__(self, **defaults):
            core.Exporter.__init__(self, defaults=defaults)
            self.Export(params=['ConfigurationNumber',
                                'InterfaceNumberOfEntries'],
                        lists=['Interface'])

          class Interface(core.Exporter):
            """Represents InternetGatewayDevice_v1_5.USBHosts.Host.{i}.Device.{i}.Configuration.{i}.Interface.{i}."""

            def __init__(self, **defaults):
              core.Exporter.__init__(self, defaults=defaults)
              self.Export(params=['InterfaceClass',
                                  'InterfaceNumber',
                                  'InterfaceProtocol',
                                  'InterfaceSubClass'])

  class User(core.Exporter):
    """Represents InternetGatewayDevice_v1_5.User.{i}."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(params=['Enable',
                          'Language',
                          'Password',
                          'RemoteAccessCapable',
                          'Username'])

  class UserInterface(core.Exporter):
    """Represents InternetGatewayDevice_v1_5.UserInterface."""

    def __init__(self, **defaults):
      core.Exporter.__init__(self, defaults=defaults)
      self.Export(objects=['LocalDisplay',
                           'RemoteAccess'])

    class LocalDisplay(core.Exporter):
      """Represents InternetGatewayDevice_v1_5.UserInterface.LocalDisplay."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['DisplayHeight',
                            'DisplayWidth',
                            'Height',
                            'Movable',
                            'PosX',
                            'PosY',
                            'Resizable',
                            'Width'])

    class RemoteAccess(core.Exporter):
      """Represents InternetGatewayDevice_v1_5.UserInterface.RemoteAccess."""

      def __init__(self, **defaults):
        core.Exporter.__init__(self, defaults=defaults)
        self.Export(params=['Enable',
                            'Port',
                            'Protocol',
                            'SupportedProtocols'])


if __name__ == '__main__':
  print core.DumpSchema(Device_v1_3)
  print core.DumpSchema(InternetGatewayDevice_v1_5)
