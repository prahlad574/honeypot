<!-- saved from url=(0022)http://internet.e-mail -->
<html><head>
<meta http-equiv=Content-Script-Type content=text/javascript>
<meta http-equiv=Content-Style-Type content=text/css>
<meta http-equiv=Content-Type content="text/html; charset=
iso-8859-1">
<link rel="stylesheet" href="../css/style.css" type="text/css">
<script language="javascript" src="../basic/tc2func.js"></script>
<script language="javascript" src="../js/general.js"></script>
<script language="JavaScript"> 
function ornIppTosDscp(type){
var form = document.QoS_Form;
switch(type){
case 0://disable all
form.Qos_IPP_DSCP1[0].disabled = true;
form.Qos_IPP_DSCP1[1].disabled = true;
form.QosIPPValue1.disabled = true;
form.QosIPPValue2.disabled = true;
form.QosTOS.disabled = true;
form.QosDSCPValue1.disabled = true;
form.QosDSCPValue2.disabled = true;
break;
case 1://enable all
form.Qos_IPP_DSCP1[0].disabled = false;
form.Qos_IPP_DSCP1[1].disabled = false;
form.QosIPPValue1.disabled = false;
form.QosIPPValue2.disabled = false;
form.QosTOS.disabled = false;
form.QosDSCPValue1.disabled = false;
form.QosDSCPValue2.disabled = false;
break;
case 2://IPP
form.Qos_IPP_DSCP1[0].disabled = false;
form.Qos_IPP_DSCP1[1].disabled = false;
form.QosIPPValue1.disabled = false;
form.QosIPPValue2.disabled = false;
form.QosTOS.disabled = false;
form.QosDSCPValue1.disabled = true;
form.QosDSCPValue2.disabled = true;
break;
case 3://DSCP
form.Qos_IPP_DSCP1[0].disabled = false;
form.Qos_IPP_DSCP1[1].disabled = false;
form.QosIPPValue1.disabled = true;
form.QosIPPValue2.disabled = true;
form.QosTOS.disabled = true;
form.QosDSCPValue1.disabled = false;
form.QosDSCPValue2.disabled = false;
break;
default:
break;
}
}
function reIppTosDscp(type){
var form = document.QoS_Form;
switch(type){
case 0://disable all
form.Qos_IPP_DSCP2[0].disabled = true;
form.Qos_IPP_DSCP2[1].disabled = true;
form.QosReIPPValue.disabled = true;
form.QosReTOS.disabled = true;
form.QosReDSCPValue.disabled = true;
break;
case 1://enable all
form.Qos_IPP_DSCP2[0].disabled = false;
form.Qos_IPP_DSCP2[1].disabled = false;
form.QosReIPPValue.disabled = false;
form.QosReTOS.disabled = false;
form.QosReDSCPValue.disabled = false;
break;
case 2://IPP
form.Qos_IPP_DSCP2[0].disabled = false;
form.Qos_IPP_DSCP2[1].disabled = false;
form.QosReIPPValue.disabled = false;
form.QosReTOS.disabled = false;
form.QosReDSCPValue.disabled = true;
break;
case 3://DSCP
form.Qos_IPP_DSCP2[0].disabled = false;
form.Qos_IPP_DSCP2[1].disabled = false;
form.QosReIPPValue.disabled = true;
form.QosReTOS.disabled = true;
form.QosReDSCPValue.disabled = false;
break;
default:
break;
}
}
function fromDMacToPriority(TorF){
var value;
var form = document.QoS_Form;
if(TorF == 0){
value = true;
ornIppTosDscp(0);
reIppTosDscp(0);
}else{
value = false;
ornIppTosDscp(1);
reIppTosDscp(1);
}
form.QosDestMacValue.disabled = value;
form.QosDestIpValue.disabled = value;
form.QosDestMaskValue.disabled = value;
form.QosDestPortValue1.disabled = value;
form.QosDestPortValue2.disabled = value;
form.QosSrcMacValue.disabled = value;
form.QosSrcIpValue.disabled = value;
form.QosSrcMaskValue.disabled = value;
form.QosSrcPortValue1.disabled = value;
form.QosSrcPortValue2.disabled = value;
form.QosProtocol.disabled = value;
form.QosVIDValue1.disabled = value;
form.QosVIDValue2.disabled = value;
form.Qos8021pValue1.disabled = value;
form.Qos8021pValue2.disabled = value;
form.Qos8021pReValue.disabled = value;
form.Qos8021pReApp.disabled = value;
form.QosConfigPriority.disabled = value;
}
function formQBW(TorF){
}
function formPW(TorF){
}
function ObjSafeDisable(obj, state)
{
if (null != obj)
obj.disabled = state;
}
function formQBWandPW(type){
}
function checkQBWandPW(){
}
function fromSumToDeact(TorF){
var form = document.QoS_Form;
var value;
if(TorF == 0){
value = true;
formQBWandPW(0);
}else{
value = false;
formQBWandPW(1);
}
}
function formAppToPhyport(TorF){
var form = document.QoS_Form;
var value;
if(TorF == 0)
value = true;
else
value = false;
form.QosApp.disabled = value;
form.QosPhyPortWLAN.disabled = value;
if(document.QoS_Form.QosMBSSIDNumberFlag.value==2){
form.QosPhyPortWLANMssid0.disabled = value;
form.QosPhyPortWLANMssid1.disabled = value;
}else if(document.QoS_Form.QosMBSSIDNumberFlag.value==3){
form.QosPhyPortWLANMssid0.disabled = value;
form.QosPhyPortWLANMssid1.disabled = value;
form.QosPhyPortWLANMssid2.disabled = value;
}else if(document.QoS_Form.QosMBSSIDNumberFlag.value==4){
form.QosPhyPortWLANMssid0.disabled = value;
form.QosPhyPortWLANMssid1.disabled = value;
form.QosPhyPortWLANMssid2.disabled = value;
form.QosPhyPortWLANMssid3.disabled = value;
}
form.QosPhyPortUSB.disabled = value;
form.QosPhyPortEnet1.disabled = value;
form.QosPhyPortEnet2.disabled = value;
form.QosPhyPortEnet3.disabled = value;
form.QosPhyPortEnet4.disabled = value;
}
function disableAll()
{
fromSumToDeact(0);
IPv6QosEnableDisable(0);
IPv6RuleEnableDisable(0);
}
function enableAll()
{
fromSumToDeact(1);
IPv6QosEnableDisable(1);
IPv6RuleEnableDisable(1);
}
function init()
{
if(document.QoS_Form.Qos_active[1].checked){
disableAll();
return;
}
if(null != document.QoS_Form.IPv6QosRuleActive[1] && document.QoS_Form.IPv6QosRuleActive[1].checked)
IPv6RuleEnableDisable(0);
}
function doMACcheck(object)
{
var szAddr = object.value;
var len = szAddr.length;
if ( len == 0 )
{
return;
}
if ( len == 12 )
{
var newAddr = "";
var i = 0;
for ( i = 0; i < len; i++ )
{
var c = szAddr.charAt(i);
if ( doHexCheck(c) < 0 )
{
if( object.name == "QosDestMacValue"){
alert("Invalid Destination MAC address!");}else{
alert("Invalid Source MAC address!");}
object.focus();
return;
}
if ( (i == 2) || (i == 4) || (i == 6) || (i == 8) || (i == 10) )
newAddr = newAddr + ":";
newAddr = newAddr + c;
}
object.value = newAddr;
return;
}
else if ( len == 17 )
{
var i = 2;
var c0 = szAddr.charAt(0);
var c1 = szAddr.charAt(1);
if ( (doHexCheck(c0) < 0) || (doHexCheck(c1) < 0) )
{
if( object.name == "QosDestMacValue"){
alert("Invalid Destination MAC address!");}else{
alert("Invalid Source MAC address!");}
object.focus();
return;
}
i = 2;
while ( i < len )
{
var c0 = szAddr.charAt(i);
var c1 = szAddr.charAt(i+1);
var c2 = szAddr.charAt(i+2);
if ( (c0 != ":") || (doHexCheck(c1) < 0) || (doHexCheck(c2) < 0) )
{
if( object.name == "QosDestMacValue"){
alert("Invalid Destination MAC address!");}else{
alert("Invalid Source MAC address!");}
object.focus();
return;
}
i = i + 3;
}
return;
}
else
{
if( object.name == "QosDestMacValue"){
alert("Invalid Destination MAC address!");}else{
alert("Invalid Source MAC address!");}
object.focus();
return;
}
}
function errorValueAlert(option){
switch(option){
case 0:
alert("Destination Port Error!");break;
case 1:
alert("Source Port Error!");break;
case 2:
alert("Vlan ID Error!");break;
case 3:
alert("Wrong DSCP Priority!");break;
case 4:
alert("Wrong Remarked DSCP value!");break;
case 6:
alert("Wrong New 802.1p Priority!");break;
default:
break;
}
}
function checkRangeValue(sElem, eElem, min, max, option)
{
start = parseInt(sElem.value);
end = parseInt(eElem.value);
if((sElem.value == "")&&(eElem.value == ""))
return true;
if((!isNumeric(sElem.value))||(!isNumeric(eElem.value)))
{
errorValueAlert(option);
return false;
}
if(isNaN(start) || start > max || start < min)
{
errorValueAlert(option);
return false;
}
if(isNaN(end) || end > max || end < min)
{
errorValueAlert(option);
return false;
}
if(start > end)
{
errorValueAlert(option);
return false;
}
return true;
}
function verifyForm(){
var form = document.QoS_Form;
if(form.QOS_Flag.value != 0)
return;
if(document.QoS_Form.Qos_active[1].checked)
return;
if(null != form.IPv6QosRuleActive[1] && form.IPv6QosRuleActive[1].checked)
return true;
if ((null != form.IPv6QosRuleDestAddress && null != form.IPv6QosRuleDestAddressPrefix)
&& ("" != form.IPv6QosRuleDestAddress.value || "" != form.IPv6QosRuleDestAddressPrefix.value) )
{
if(inValidIPv6Addr(form.IPv6QosRuleDestAddress.value))
return false;
if(inValidIPv6Prefix(form.IPv6QosRuleDestAddressPrefix.value))
return false;
}
if ((null != form.IPv6QosRuleSourceAddress && null != form.IPv6QosRuleSourceAddressPrefix)
&& ("" != form.IPv6QosRuleSourceAddress.value || "" != form.IPv6QosRuleSourceAddressPrefix.value) )
{
if(inValidIPv6Addr(form.IPv6QosRuleSourceAddress.value))
return false;
if(inValidIPv6Prefix(form.IPv6QosRuleSourceAddressPrefix.value))
return false;
}
if (null != form.IPv6QosDSCPValueS && null != form.IPv6QosDSCPValueE && (!checkRangeValue(form.IPv6QosDSCPValueS, form.IPv6QosDSCPValueE, 0, 63, 3)))
return false;
if (null != form.IPv6QosReDSCPRemarkingValue && (!checkRangeValue(form.IPv6QosReDSCPRemarkingValue, form.IPv6QosReDSCPRemarkingValue, 0, 63, 4)))
return false;
if(form.QosConfigPriority.selectedIndex == 0){
alert("We should assign priority queue for this rule!");return false;
}
if(form.Qos)
return;
}
function doAdd() {
document.forms[0].QOS_Flag.value = 0;
}
function doIndexChange() {
document.forms[0].QOS_Flag.value = 1;
document.forms[0].submit();
}
function doDel(){
document.forms[0].QOS_Flag.value = 2;
}
function setProtoPort(protoIdx, dPort1, dPort2){
var form = document.QoS_Form;
form.QosProtocol.selectedIndex = protoIdx;
form.QosDestPortValue1.value = dPort1;
form.QosDestPortValue2.value = dPort2;
}
function doQosAppIdxChange(){
var form = document.QoS_Form;
switch(form.QosApp.selectedIndex){
case 0:
default:
break;
case 1://IGMP
form.QosDestIpValue.value = "224.0.0.0";
form.QosDestMaskValue.value = "240.0.0.0";
break;
case 2://SIP
setProtoPort(3, 5060, 5060);
break;
case 3://H.323
setProtoPort(3, 1719, 1720);
break;
case 4://MGCP
setProtoPort(3, 2427, 2427);
break;
case 5://SNMP
setProtoPort(1, 161, 161);
break;
case 6://DNS
setProtoPort(3, 53, 53);
break;
case 7://DHCP
setProtoPort(3, 67, 67);
form.QosSrcPortValue1.value = 68;
form.QosSrcPortValue2.value = 68;
break;
case 8://RIP
setProtoPort(3, 520, 520);
break;
case 9://RSTP
setProtoPort(3, 554, 554);
break;
case 10://RTCP
setProtoPort(3, 5005, 5005);
break;
case 11://RTP
setProtoPort(3, 5004, 5004);
break;
}
}
function doQos1pAppIdxChange(){
switch(document.QoS_Form.Qos8021pReApp.selectedIndex){
case 0:
default:
break;
case 1://ketNET
document.QoS_Form.Qos8021pReValue.selectedIndex = 8;
break;
case 2://voice
document.QoS_Form.Qos8021pReValue.selectedIndex = 7;
break;
case 3://vide0
document.QoS_Form.Qos8021pReValue.selectedIndex = 6;
break;
case 4://IGMP
document.QoS_Form.Qos8021pReValue.selectedIndex = 5;
break;
case 5://keyData
document.QoS_Form.Qos8021pReValue.selectedIndex = 4;
break;
}
}
function onClickQosSummary() {
window.open("../advanced/adv_qoslist.htm","QoS_List","toolbar=no,menubar=no,scrollbars=yes,height=600, width=850,location=0,left=200,top=200");
return false;
}
function doLoad()
{
}
function inValidIPv6Addr(Address)
{
var regExp = /^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/;
var address = Address.match(regExp);
if(address == null){
alert('Invalid IPv6 Address:' + Address);
return true;
}
return false;
}
function inValidIPv6Prefix(Prefix)
{
var IPv6Prefix = Prefix.match("^[0-9]{1,3}$");
if(IPv6Prefix == null) {
alert('Invalid IPv6 Prefix:' + Prefix);
return true;
}
if((Number(Prefix) > 128 ) || (Number(Prefix) < 1 )){
alert('Invalid IPv6 Prefix:' + Prefix);
return true;
}
return false;
}
function doIPv6IndexChange()
{
document.forms[0].QOS_Flag.value = 5;
document.forms[0].submit();
}
function IPv6RuleEnableDisable(on_off)
{
var state;
var form = document.forms[0];
state = (1 == on_off) ? false : true;
ObjSafeDisable(form.IPv6QosRuleDestAddress, state);
ObjSafeDisable(form.IPv6QosRuleDestAddressPrefix, state);
ObjSafeDisable(form.IPv6QosRuleSourceAddress, state);
ObjSafeDisable(form.IPv6QosRuleSourceAddressPrefix, state);
ObjSafeDisable(form.IPv6QosDSCPValueS, state);
ObjSafeDisable(form.IPv6QosDSCPValueE, state);
ObjSafeDisable(form.IPv6QosReDSCPRemarkingValue, state);
ObjSafeDisable(form.QosConfigPriority, state);
}
function IPv6QosEnableDisable(on_off)
{
var state;
var form = document.forms[0];
state = (1 == on_off) ? false : true;
ObjSafeDisable(form.Qos_Summary, state);
ObjSafeDisable(form.IPv6QosRuleIndex, state);
ObjSafeDisable(form.IPv6QosRuleActive[0], state);
ObjSafeDisable(form.IPv6QosRuleActive[1], state);
}
function doIPVersionChange()
{
document.forms[0].QOS_Flag.value = 4;
document.forms[0].submit();
}
</script>
</head><body onload="init();doLoad();">
<FORM METHOD="POST" ACTION="http://www.tp-link.com/Forms/adv_qos_1" name="QoS_Form" onsubmit="return verifyForm()"><div align=center>
<table width="760" align=center cellpadding="0" cellspacing="0" bgcolor="#FFFFFF">
<tr>
<td height="5" class="light-orange" colspan="5">&nbsp;</td></tr><tr>
<td width="150" height="30" class="title-main">
<font color="#ffffff">Quality of Service</font></td><td width="10" class="black">&nbsp;</td><td width="150"><hr noshade></td><td width="10" ><hr noshade></td><td width="440"><hr noshade></td></tr><tr>
<td class="light-orange">&nbsp;</td><td class="light-orange"></td><td class="tabdata" align=right>
IP Version</td><td class="tabdata" align=center>:</td><td class="tabdata">
<INPUT TYPE="RADIO" NAME="Qos_IPVersion" VALUE="0" onclick="location='adv_qos.htm'">IPv4<INPUT TYPE="RADIO" NAME="Qos_IPVersion" VALUE="1" CHECKED onclick="location='adv_qos_ipv6.htm'">IPv6</td></tr><tr>
<td class="light-orange">&nbsp;</td><td class="light-orange"></td><td class="tabdata" align=right>
<font color="#000000">QoS</font></td><td class="tabdata" align=center>:</td><td class="tabdata">
<INPUT TYPE="RADIO" NAME="Qos_active" VALUE="1" onclick="enableAll();init();"><font color="#000000">Activated</font><INPUT TYPE="RADIO" NAME="Qos_active" VALUE="0" CHECKED onclick="disableAll();"><font color="#000000">Deactivated</font></td></tr><tr>
<td class="light-orange">&nbsp;</td><td class="light-orange"></td><td class="tabdata" align=right>
<font color="#000000">Summary</font></td><td class="tabdata" align=center>:</td><td class="tabdata">
<INPUT TYPE="BUTTON" NAME="Qos_Summary" VALUE="QoS Settings Summary" onClick="onClickQosSummary();"></td></tr><tr>
<td class="title-sub">
<font color="#000000">Rule</font></td><td class="light-orange">&nbsp;</td><td class="tabdata"><hr noshade class="light-orange-line"></td><td class="tabdata"><hr noshade class="light-orange-line"></td><td class="tabdata"><hr noshade class="light-orange-line"></td></tr><tr>
<td class="light-orange">&nbsp;</td><td class="light-orange"></td><td class="tabdata" align=right>
<font color="#000000">Rule Index</font></td><td class="tabdata" align=center>:</td><td  class="tabdata">
<SELECT NAME="IPv6QosRuleIndex" SIZE="1" onChange="doIPv6IndexChange()"><OPTION SELECTED>1
<OPTION>2
<OPTION>3
<OPTION>4
<OPTION>5
<OPTION>6
<OPTION>7
<OPTION>8
<OPTION>9
<OPTION>10
<OPTION>11
<OPTION>12
<OPTION>13
<OPTION>14
<OPTION>15
<OPTION>16
</SELECT><INPUT TYPE="HIDDEN" NAME="QOS_Flag" VALUE="0"></td></tr><tr>
<td class="light-orange">&nbsp;</td><td class="light-orange"></td><td class="tabdata" align=right>
<font color="#000000">Active</font></td><td class="tabdata" align=center>:</td><td class="tabdata">
<INPUT TYPE="RADIO" NAME="IPv6QosRuleActive" VALUE="1" onclick="IPv6RuleEnableDisable(1);"><font color="#000000">Activated</font><INPUT TYPE="RADIO" NAME="IPv6QosRuleActive" VALUE="0" CHECKED onclick="IPv6RuleEnableDisable(0);"><font color="#000000">Deactivated</font></td></tr><tr>
<td class="light-orange">&nbsp;</td><td class="light-orange"></td><td class="tabdata" align=right>
<font color="#000000">Destination IPv6</font></td><td class="tabdata" align=center>:</td><td class="tabdata">
<INPUT TYPE="TEXT" NAME="IPv6QosRuleDestAddress" SIZE="40" MAXLENGTH="39" VALUE="">/
<INPUT TYPE="TEXT" NAME="IPv6QosRuleDestAddressPrefix" SIZE="4" MAXLENGTH="3" VALUE=""></td></tr><tr>
<td class="light-orange">&nbsp;</td><td class="light-orange"></td><td class="tabdata" align=right>
<font color="#000000">Source IPv6</font></td><td class="tabdata" align=center>:</td><td class="tabdata">
<INPUT TYPE="TEXT" NAME="IPv6QosRuleSourceAddress" SIZE="40" MAXLENGTH="39" VALUE="">/
<INPUT TYPE="TEXT" NAME="IPv6QosRuleSourceAddressPrefix" SIZE="4" MAXLENGTH="3" VALUE=""></td></tr><tr>
<td class="light-orange">&nbsp;</td><td class="light-orange"></td><td class="tabdata" align=right>
<font color="#000000">DSCP Range</font></td><td class="tabdata" align=center>:</td><td class="tabdata">
<INPUT TYPE="TEXT" NAME="IPv6QosDSCPValueS" SIZE="3" MAXLENGTH="2" VALUE="">&nbsp;~&nbsp;
<INPUT TYPE="TEXT" NAME="IPv6QosDSCPValueE" SIZE="3" MAXLENGTH="2" VALUE=""><font color="#000000">(Value Range: 0 ~ 63)</font></td></tr><tr>
<td class="title-sub">
<font color="#000000">Action</font></td><td class="light-orange"></td><td class="tabdata"><hr noshade class="light-orange-line"></td><td class="tabdata"><hr noshade class="light-orange-line"></td><td class="tabdata"><hr noshade class="light-orange-line"></td></tr><tr>
<td class="light-orange">&nbsp;</td><td class="light-orange"></td><td class="tabdata" align=right>
<font color="#000000">DSCP Remarking</font></td><td class="tabdata" align=center>:</td><td class="tabdata">
<INPUT TYPE="TEXT" NAME="IPv6QosReDSCPRemarkingValue" SIZE="3" MAXLENGTH="2" VALUE=""><font color="#000000">(Value Range: 0 ~ 63)</font></td></tr><tr>
<td class="light-orange">&nbsp;</td><td class="light-orange"></td><td class="tabdata" align=right>
<font color="#000000">Queue #</font></td><td class="tabdata" align=center>:</td><td class="tabdata">
<SELECT NAME="QosConfigPriority" SIZE="1"><OPTION SELECTED>
<OPTION>Low
<OPTION>Medium
<OPTION>High
<OPTION>Highest
</SELECT></td></tr><tr>
<td class="light-orange"></td><td class="light-orange"></td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table><table width="760" border="0" align=center cellpadding="0" cellspacing="0">
<tr>
<td width="160" height="42" class="black">&nbsp;</td><td width="160" class="orange">&nbsp;</td><td width="440" class="orange">
<INPUT TYPE="BUTTON" NAME="QoS_Add" VALUE="ADD"><INPUT TYPE="BUTTON" NAME="QoS_Del" VALUE="DELETE"><INPUT TYPE="BUTTON" NAME="QoS_Cancel" VALUE="CANCEL" onClick="document.forms[0].QOS_Flag.value = 3; javascript:window.location='adv_qos.htm'"><INPUT TYPE="HIDDEN" NAME="QosMBSSIDNumberFlag" VALUE="0"></td></tr></table></div></form>
</body></html>
